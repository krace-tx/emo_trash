// goctl rpc protoc users.proto --go_out=. --go-grpc_out=. --zrpc_out=. -m

syntax = "proto3";

package user_center;

option go_package = "./user_center";

// 用户中心服务接口
service Users {
  // 获取用户的信息
  rpc GetUserInfo (GetUserInfoRequest) returns (GetUserInfoResponse);
  // 更新用户信息
  rpc EditUserInfo (EditUserInfoRequest) returns (EditUserInfoResponse);
  // 注册用户
  rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse);
  // 编辑隐私权限
  rpc EditUserSetting (EditUserSettingRequest) returns (EditUserSettingResponse);
  // 获取隐私权限信息
  rpc GetUserSetting (GetUserSettingRequest) returns (GetUserSettingResponse);
  // 搜索用户
  rpc SearchUsers (SearchUsersRequest) returns (SearchUsersResponse);
  // 获取用户密钥
  rpc GetUserKey (GetUserKeyRequest) returns (GetUserKeyResponse);
  // 获取一次性通行证密钥
  rpc GetPassKey (GetPassKeyRequest) returns (GetPassKeyResponse);
  // 解析一次性通行证密钥
  rpc ParsePassKey (ParsePassKeyRequest) returns (ParsePassKeyResponse);
  // 关注其他用户
  rpc FollowUser(FollowUserRequest) returns (FollowUserResponse);
  // 取消关注
  rpc UnfollowUser(UnfollowUserRequest) returns (UnfollowUserResponse);
  // 获取用户关注列表
  rpc GetFollowList(GetFollowListRequest) returns (GetFollowListResponse);
  // 获取用户的粉丝列表
  rpc GetFollowerList(GetFollowerListRequest) returns (GetFollowerListResponse);
  // 查询互关朋友
  rpc GetMutualFriends(GetMutualFriendsRequest) returns (GetMutualFriendsResponse);
  // 查询其他用户与自己的关系状态码
  rpc GetFollowStatus (GetFollowStatusRequest) returns (GetFollowStatusResponse);
  // 屏蔽用户
  rpc BlockUser(BlockUserRequest) returns (BlockUserResponse);
  // 获取屏蔽用户列表
  rpc GetBlockedUsers(GetBlockedUsersRequest) returns (GetBlockedUsersResponse);
  // 举报用户
  rpc ReportUser(ReportUserRequest) returns (ReportUserResponse);
}

message UserInfoDetail {
  string user_id = 1;           // 用户id
  string nickname = 2;          // 昵称
  string avatar = 3;            // 头像
  string gender = 4;            // 性别
  string birthday = 5;          // 生日
  string signature = 6;         // 个性签名
  string campus = 7;            // 校区
  string background = 8;       // 背景图
  repeated string tags = 9;      // 标签
  repeated string identity = 10; // 身份
}


message UserInfoBase {
  string user_id = 1;           // 用户id
  string nickname = 2;          // 昵称
  string avatar = 3;            // 头像
  string gender = 4;            // 性别
}

message UserSetting {
  string user_id     = 1;
  string gender     = 2;
  string birthday   = 3;
  string tags        = 4;
  string signature  = 5;
  string identity   = 6;
  string campus     = 7;
  string collect    = 8;
  string dynamic    = 9;
  string fan        = 10;
  string search     = 11;
}

message GetUserInfoRequest {
  string user_id = 1;
  string target_id = 2;
}

message GetUserInfoResponse {
  UserInfoDetail user_info = 1;
}

message EditUserInfoRequest {
  UserInfoDetail edit_info = 1;
}

message EditUserInfoResponse {
  string message = 1;
}

message RegisterUserRequest {
  UserInfoBase user_info = 1;
}

message RegisterUserResponse {
  string message = 1;
}

message EditUserSettingRequest {
  UserSetting setting = 1;
}

message EditUserSettingResponse {
  string message = 1;
}

message GetUserSettingRequest {
  string user_id = 1;
}

message GetUserSettingResponse {
  UserSetting setting = 1;
}

// 搜索用户
message SearchUsersRequest {
  string keyword = 1; // 搜索关键词
  int32 page = 2; // 页码，从1开始
  int32 page_size = 3; // 每页大小
}

message SearchUsersResponse {
  repeated UserInfoBase users = 1; // 搜索结果
  int64 total_count = 2; // 总记录数
}

message GetUserKeyRequest {
  string user_id = 1;
}

message GetUserKeyResponse {
    string public_key  = 3;
    string private_key = 4;
}

message GetPassKeyRequest {
  string user_id = 1;
}

message GetPassKeyResponse {
  string key = 1;
}

message ParsePassKeyRequest  {
  string user_id = 1;
  string key = 2;
}

message ParsePassKeyResponse {
  bool success = 1;
}


message FollowUserRequest {
  string user_id = 1; // 当前用户ID
  string follow_user_id = 2; // 需要关注的用户ID
}

message FollowUserResponse {
  bool success = 1; // 是否关注成功
  string message = 2;
}

message UnfollowUserRequest {
  string user_id = 1; // 当前用户ID
  string unfollow_user_id = 2; // 需要取消关注的用户ID
}

message UnfollowUserResponse {
  bool success = 1; // 是否取消关注成功
  string message = 2;
}

message GetFollowListRequest {
  string user_id = 1; // 用户ID
  int32 page = 2; // 页码，从1开始
  int32 page_size = 3; // 每页大小
}

message GetFollowListResponse {
  repeated UserInfoBase follow_list = 1; // 关注列表
  int64 total_count = 2; // 总记录数
}

message GetFollowerListRequest {
  string user_id = 1; // 用户ID
  int32 page = 2; // 页码，从1开始
  int32 page_size = 3; // 每页大小
}

message GetFollowerListResponse {
  repeated UserInfoBase follower_list = 1; // 粉丝列表
  int64 total_count = 2; // 总记录数
}

message GetMutualFriendsRequest {
  string user_id = 1; // 当前用户ID
  int32 page = 2; // 页码，从1开始
  int32 page_size = 3; // 每页大小
}

message GetMutualFriendsResponse {
  repeated UserInfoBase mutual_friends = 1; // 互关朋友列表
  int64 total_count = 2; // 总记录数

}

message GetFollowStatusRequest {
  string user_id = 1; // 当前用户ID
  string target_id = 2; // 需要查询的用户ID
}

message GetFollowStatusResponse {
  int32 status = 1;
}

// 屏蔽用户
message BlockUserRequest {
  string user_id = 1; // 当前用户ID
  string block_user_id = 2; // 需要屏蔽的用户ID
}

message BlockUserResponse {
  bool success = 1; // 是否屏蔽成功
  string message = 2;
}

// 获取屏蔽用户列表
message GetBlockedUsersRequest {
  string user_id = 1; // 当前用户ID
}

message GetBlockedUsersResponse {
  repeated UserInfoBase blocked_users = 1; // 被屏蔽用户列表
}

// 举报用户
message ReportUserRequest {
  string user_id = 1; // 当前用户ID
  string report_user_id = 2; // 被举报用户ID
  string reason = 3; // 举报原因
}

message ReportUserResponse {
  bool success = 1; // 是否举报成功
  string message = 2;
}