//
//goctl rpc protoc article.proto --go_out=. --go-grpc_out=. --zrpc_out=. -m

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: article.proto

package article

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCommentListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 帖子ID
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentListRequest) Reset() {
	*x = GetCommentListRequest{}
	mi := &file_article_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListRequest) ProtoMessage() {}

func (x *GetCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListRequest.ProtoReflect.Descriptor instead.
func (*GetCommentListRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{0}
}

func (x *GetCommentListRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *GetCommentListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCommentListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommentListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetCommentListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`      // 评论总数
	Comments      []*CommentInfo         `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"` // 楼主评论列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentListResponse) Reset() {
	*x = GetCommentListResponse{}
	mi := &file_article_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListResponse) ProtoMessage() {}

func (x *GetCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListResponse.ProtoReflect.Descriptor instead.
func (*GetCommentListResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{1}
}

func (x *GetCommentListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetCommentListResponse) GetComments() []*CommentInfo {
	if x != nil {
		return x.Comments
	}
	return nil
}

type GetReplyCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论ID
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                           // 页码
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplyCommentRequest) Reset() {
	*x = GetReplyCommentRequest{}
	mi := &file_article_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplyCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyCommentRequest) ProtoMessage() {}

func (x *GetReplyCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyCommentRequest.ProtoReflect.Descriptor instead.
func (*GetReplyCommentRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{2}
}

func (x *GetReplyCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *GetReplyCommentRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReplyCommentRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetReplyCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`    // 评论总数
	Replies       []*Reply               `protobuf:"bytes,2,rep,name=replies,proto3" json:"replies,omitempty"` // 回复评论列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplyCommentResponse) Reset() {
	*x = GetReplyCommentResponse{}
	mi := &file_article_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplyCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyCommentResponse) ProtoMessage() {}

func (x *GetReplyCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyCommentResponse.ProtoReflect.Descriptor instead.
func (*GetReplyCommentResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{3}
}

func (x *GetReplyCommentResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetReplyCommentResponse) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 帖子ID
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                      // 评论内容
	Annex         string                 `protobuf:"bytes,4,opt,name=annex,proto3" json:"annex,omitempty"`                          // 附件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_article_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCommentRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *CreateCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentRequest) GetAnnex() string {
	if x != nil {
		return x.Annex
	}
	return ""
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论ID
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                      // 返回信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_article_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCommentResponse) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *CreateCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReplyCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 帖子ID
	CommentId     string                 `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论ID
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                      // 回复内容
	Annex         string                 `protobuf:"bytes,5,opt,name=annex,proto3" json:"annex,omitempty"`                          // 附件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentRequest) Reset() {
	*x = ReplyCommentRequest{}
	mi := &file_article_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentRequest) ProtoMessage() {}

func (x *ReplyCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentRequest.ProtoReflect.Descriptor instead.
func (*ReplyCommentRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{6}
}

func (x *ReplyCommentRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *ReplyCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *ReplyCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReplyCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyCommentRequest) GetAnnex() string {
	if x != nil {
		return x.Annex
	}
	return ""
}

type ReplyCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"` // 回复ID
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                // 返回信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentResponse) Reset() {
	*x = ReplyCommentResponse{}
	mi := &file_article_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentResponse) ProtoMessage() {}

func (x *ReplyCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentResponse.ProtoReflect.Descriptor instead.
func (*ReplyCommentResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{7}
}

func (x *ReplyCommentResponse) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *ReplyCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CommentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论ID
	ArticleId     string                 `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 帖子ID
	UserInfo      *UserInfoBase          `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`    // 用户信息
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                      // 评论内容
	CreateAt      string                 `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`    // 评论创建时间
	LeafSize      int32                  `protobuf:"varint,6,opt,name=leaf_size,json=leafSize,proto3" json:"leaf_size,omitempty"`   // 回复数量
	Likes         int32                  `protobuf:"varint,7,opt,name=likes,proto3" json:"likes,omitempty"`                         // 点赞数量
	Annex         []string               `protobuf:"bytes,8,rep,name=annex,proto3" json:"annex,omitempty"`                          // 附件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	mi := &file_article_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{8}
}

func (x *CommentInfo) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *CommentInfo) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *CommentInfo) GetUserInfo() *UserInfoBase {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *CommentInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentInfo) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *CommentInfo) GetLeafSize() int32 {
	if x != nil {
		return x.LeafSize
	}
	return 0
}

func (x *CommentInfo) GetLikes() int32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *CommentInfo) GetAnnex() []string {
	if x != nil {
		return x.Annex
	}
	return nil
}

type LikeCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论ID
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	Status        bool                   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentRequest) Reset() {
	*x = LikeCommentRequest{}
	mi := &file_article_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentRequest) ProtoMessage() {}

func (x *LikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentRequest.ProtoReflect.Descriptor instead.
func (*LikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{9}
}

func (x *LikeCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *LikeCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LikeCommentRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type LikeCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否操作成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentResponse) Reset() {
	*x = LikeCommentResponse{}
	mi := &file_article_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentResponse) ProtoMessage() {}

func (x *LikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentResponse.ProtoReflect.Descriptor instead.
func (*LikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{10}
}

func (x *LikeCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetCommentLeafCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentLeafCountRequest) Reset() {
	*x = GetCommentLeafCountRequest{}
	mi := &file_article_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentLeafCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentLeafCountRequest) ProtoMessage() {}

func (x *GetCommentLeafCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentLeafCountRequest.ProtoReflect.Descriptor instead.
func (*GetCommentLeafCountRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{11}
}

func (x *GetCommentLeafCountRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type GetCommentLeafCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentLeafCountResponse) Reset() {
	*x = GetCommentLeafCountResponse{}
	mi := &file_article_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentLeafCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentLeafCountResponse) ProtoMessage() {}

func (x *GetCommentLeafCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentLeafCountResponse.ProtoReflect.Descriptor instead.
func (*GetCommentLeafCountResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{12}
}

func (x *GetCommentLeafCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetLikeCommentCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikeCommentCountRequest) Reset() {
	*x = GetLikeCommentCountRequest{}
	mi := &file_article_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikeCommentCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikeCommentCountRequest) ProtoMessage() {}

func (x *GetLikeCommentCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikeCommentCountRequest.ProtoReflect.Descriptor instead.
func (*GetLikeCommentCountRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{13}
}

func (x *GetLikeCommentCountRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type GetLikeCommentCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikeCommentCountResponse) Reset() {
	*x = GetLikeCommentCountResponse{}
	mi := &file_article_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikeCommentCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikeCommentCountResponse) ProtoMessage() {}

func (x *GetLikeCommentCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikeCommentCountResponse.ProtoReflect.Descriptor instead.
func (*GetLikeCommentCountResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{14}
}

func (x *GetLikeCommentCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CheckIfUserLikedCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	CommentId     string                 `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckIfUserLikedCommentRequest) Reset() {
	*x = CheckIfUserLikedCommentRequest{}
	mi := &file_article_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfUserLikedCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfUserLikedCommentRequest) ProtoMessage() {}

func (x *CheckIfUserLikedCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfUserLikedCommentRequest.ProtoReflect.Descriptor instead.
func (*CheckIfUserLikedCommentRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{15}
}

func (x *CheckIfUserLikedCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckIfUserLikedCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type CheckIfUserLikedCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Like          bool                   `protobuf:"varint,1,opt,name=like,proto3" json:"like,omitempty"` // 用户是否点赞
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckIfUserLikedCommentResponse) Reset() {
	*x = CheckIfUserLikedCommentResponse{}
	mi := &file_article_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfUserLikedCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfUserLikedCommentResponse) ProtoMessage() {}

func (x *CheckIfUserLikedCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfUserLikedCommentResponse.ProtoReflect.Descriptor instead.
func (*CheckIfUserLikedCommentResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{16}
}

func (x *CheckIfUserLikedCommentResponse) GetLike() bool {
	if x != nil {
		return x.Like
	}
	return false
}

type Reply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`               // 回复ID
	CommentId     string                 `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`         // 评论ID
	UserInfo      *UserInfoBase          `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`            // 用户信息
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                              // 回复内容
	CreateAt      string                 `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`            // 回复创建时间
	ReplyUserId   *UserInfoBase          `protobuf:"bytes,6,opt,name=reply_user_id,json=replyUserId,proto3" json:"reply_user_id,omitempty"` // 回复者的用户信息
	Likes         int32                  `protobuf:"varint,7,opt,name=likes,proto3" json:"likes,omitempty"`                                 // 点赞数量
	Annex         []string               `protobuf:"bytes,8,rep,name=annex,proto3" json:"annex,omitempty"`                                  // 附件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reply) Reset() {
	*x = Reply{}
	mi := &file_article_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{17}
}

func (x *Reply) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *Reply) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *Reply) GetUserInfo() *UserInfoBase {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *Reply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Reply) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *Reply) GetReplyUserId() *UserInfoBase {
	if x != nil {
		return x.ReplyUserId
	}
	return nil
}

func (x *Reply) GetLikes() int32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *Reply) GetAnnex() []string {
	if x != nil {
		return x.Annex
	}
	return nil
}

type UserInfoDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`           // 昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`               // 头像
	Gender        string                 `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`               // 性别
	Birthday      string                 `protobuf:"bytes,5,opt,name=birthday,proto3" json:"birthday,omitempty"`           // 生日
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                   // 标签
	Signature     string                 `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`         // 个性签名
	Identity      []string               `protobuf:"bytes,8,rep,name=identity,proto3" json:"identity,omitempty"`           // 身份
	Campus        string                 `protobuf:"bytes,9,opt,name=campus,proto3" json:"campus,omitempty"`               // 校区
	Background    string                 `protobuf:"bytes,10,opt,name=background,proto3" json:"background,omitempty"`      // 背景图
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoDetail) Reset() {
	*x = UserInfoDetail{}
	mi := &file_article_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoDetail) ProtoMessage() {}

func (x *UserInfoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoDetail.ProtoReflect.Descriptor instead.
func (*UserInfoDetail) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{18}
}

func (x *UserInfoDetail) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfoDetail) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfoDetail) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfoDetail) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserInfoDetail) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserInfoDetail) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UserInfoDetail) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UserInfoDetail) GetIdentity() []string {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *UserInfoDetail) GetCampus() string {
	if x != nil {
		return x.Campus
	}
	return ""
}

func (x *UserInfoDetail) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

type UserInfoBase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`           // 昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`               // 头像
	Gender        string                 `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`               // 性别
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoBase) Reset() {
	*x = UserInfoBase{}
	mi := &file_article_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoBase) ProtoMessage() {}

func (x *UserInfoBase) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoBase.ProtoReflect.Descriptor instead.
func (*UserInfoBase) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{19}
}

func (x *UserInfoBase) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfoBase) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfoBase) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfoBase) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

type CreateArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                // 文章标题
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                            // 文章内容
	Annex         []string               `protobuf:"bytes,3,rep,name=annex,proto3" json:"annex,omitempty"`                                // 附件的URL列表
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`                                  // 文章标签
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // 用户ID
	PartitionId   string                 `protobuf:"bytes,6,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"` // 文章分区
	Other         string                 `protobuf:"bytes,7,opt,name=other,proto3" json:"other,omitempty"`                                // 其他参数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateArticleRequest) Reset() {
	*x = CreateArticleRequest{}
	mi := &file_article_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleRequest) ProtoMessage() {}

func (x *CreateArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleRequest.ProtoReflect.Descriptor instead.
func (*CreateArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{20}
}

func (x *CreateArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateArticleRequest) GetAnnex() []string {
	if x != nil {
		return x.Annex
	}
	return nil
}

func (x *CreateArticleRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateArticleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateArticleRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *CreateArticleRequest) GetOther() string {
	if x != nil {
		return x.Other
	}
	return ""
}

type CreateArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                     // 是否创建成功
	ArticleId     string                 `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateArticleResponse) Reset() {
	*x = CreateArticleResponse{}
	mi := &file_article_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleResponse) ProtoMessage() {}

func (x *CreateArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleResponse.ProtoReflect.Descriptor instead.
func (*CreateArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{21}
}

func (x *CreateArticleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateArticleResponse) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

type EditArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                          // 文章标题
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                      // 文章内容
	Annex         []string               `protobuf:"bytes,3,rep,name=annex,proto3" json:"annex,omitempty"`                          // 附件的URL列表
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`                            // 文章标签
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	ArticleId     string                 `protobuf:"bytes,6,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章id
	Other         string                 `protobuf:"bytes,7,opt,name=other,proto3" json:"other,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditArticleRequest) Reset() {
	*x = EditArticleRequest{}
	mi := &file_article_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditArticleRequest) ProtoMessage() {}

func (x *EditArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditArticleRequest.ProtoReflect.Descriptor instead.
func (*EditArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{22}
}

func (x *EditArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EditArticleRequest) GetAnnex() []string {
	if x != nil {
		return x.Annex
	}
	return nil
}

func (x *EditArticleRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EditArticleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditArticleRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *EditArticleRequest) GetOther() string {
	if x != nil {
		return x.Other
	}
	return ""
}

type EditArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否编辑成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditArticleResponse) Reset() {
	*x = EditArticleResponse{}
	mi := &file_article_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditArticleResponse) ProtoMessage() {}

func (x *EditArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditArticleResponse.ProtoReflect.Descriptor instead.
func (*EditArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{23}
}

func (x *EditArticleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SaveDraftArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                // 文章标题
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                            // 文章内容
	Annex         []string               `protobuf:"bytes,3,rep,name=annex,proto3" json:"annex,omitempty"`                                // 附件的URL列表
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`                                  // 文章标签
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // 用户ID
	PartitionId   string                 `protobuf:"bytes,6,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"` // 文章分区
	Other         string                 `protobuf:"bytes,7,opt,name=other,proto3" json:"other,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveDraftArticleRequest) Reset() {
	*x = SaveDraftArticleRequest{}
	mi := &file_article_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveDraftArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDraftArticleRequest) ProtoMessage() {}

func (x *SaveDraftArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDraftArticleRequest.ProtoReflect.Descriptor instead.
func (*SaveDraftArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{24}
}

func (x *SaveDraftArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SaveDraftArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SaveDraftArticleRequest) GetAnnex() []string {
	if x != nil {
		return x.Annex
	}
	return nil
}

func (x *SaveDraftArticleRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SaveDraftArticleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SaveDraftArticleRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *SaveDraftArticleRequest) GetOther() string {
	if x != nil {
		return x.Other
	}
	return ""
}

type SaveDraftArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`               // 是否保存成功
	DraftId       string                 `protobuf:"bytes,2,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"` // 草稿ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveDraftArticleResponse) Reset() {
	*x = SaveDraftArticleResponse{}
	mi := &file_article_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveDraftArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDraftArticleResponse) ProtoMessage() {}

func (x *SaveDraftArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDraftArticleResponse.ProtoReflect.Descriptor instead.
func (*SaveDraftArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{25}
}

func (x *SaveDraftArticleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SaveDraftArticleResponse) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

type GetDraftArticlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftArticlesRequest) Reset() {
	*x = GetDraftArticlesRequest{}
	mi := &file_article_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftArticlesRequest) ProtoMessage() {}

func (x *GetDraftArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftArticlesRequest.ProtoReflect.Descriptor instead.
func (*GetDraftArticlesRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{26}
}

func (x *GetDraftArticlesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetDraftArticlesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetDraftArticlesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetDraftArticlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleList   []*ArticleInfo         `protobuf:"bytes,1,rep,name=article_list,json=articleList,proto3" json:"article_list,omitempty"` // 搜索结果文章列表
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`   // 总结果数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftArticlesResponse) Reset() {
	*x = GetDraftArticlesResponse{}
	mi := &file_article_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftArticlesResponse) ProtoMessage() {}

func (x *GetDraftArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftArticlesResponse.ProtoReflect.Descriptor instead.
func (*GetDraftArticlesResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{27}
}

func (x *GetDraftArticlesResponse) GetArticleList() []*ArticleInfo {
	if x != nil {
		return x.ArticleList
	}
	return nil
}

func (x *GetDraftArticlesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type DeleteArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	ArticleId     string                 `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	Verify        string                 `protobuf:"bytes,3,opt,name=verify,proto3" json:"verify,omitempty"`                        // 验证信息，用于确认删除操作
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteArticleRequest) Reset() {
	*x = DeleteArticleRequest{}
	mi := &file_article_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticleRequest) ProtoMessage() {}

func (x *DeleteArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticleRequest.ProtoReflect.Descriptor instead.
func (*DeleteArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteArticleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteArticleRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *DeleteArticleRequest) GetVerify() string {
	if x != nil {
		return x.Verify
	}
	return ""
}

type DeleteArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否删除成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteArticleResponse) Reset() {
	*x = DeleteArticleResponse{}
	mi := &file_article_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticleResponse) ProtoMessage() {}

func (x *DeleteArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticleResponse.ProtoReflect.Descriptor instead.
func (*DeleteArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteArticleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetPartitionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID（可选，根据需要）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPartitionsRequest) Reset() {
	*x = GetPartitionsRequest{}
	mi := &file_article_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartitionsRequest) ProtoMessage() {}

func (x *GetPartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartitionsRequest.ProtoReflect.Descriptor instead.
func (*GetPartitionsRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{30}
}

func (x *GetPartitionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetPartitionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Partitions    []*Partition           `protobuf:"bytes,1,rep,name=partitions,proto3" json:"partitions,omitempty"` // 分区列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPartitionsResponse) Reset() {
	*x = GetPartitionsResponse{}
	mi := &file_article_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartitionsResponse) ProtoMessage() {}

func (x *GetPartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartitionsResponse.ProtoReflect.Descriptor instead.
func (*GetPartitionsResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{31}
}

func (x *GetPartitionsResponse) GetPartitions() []*Partition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type Partition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartitionId   string                 `protobuf:"bytes,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"` // 分区ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                  // 分区名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Partition) Reset() {
	*x = Partition{}
	mi := &file_article_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Partition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Partition) ProtoMessage() {}

func (x *Partition) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Partition.ProtoReflect.Descriptor instead.
func (*Partition) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{32}
}

func (x *Partition) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *Partition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID（可选，用于查看权限）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleRequest) Reset() {
	*x = GetArticleRequest{}
	mi := &file_article_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleRequest) ProtoMessage() {}

func (x *GetArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleRequest.ProtoReflect.Descriptor instead.
func (*GetArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{33}
}

func (x *GetArticleRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *GetArticleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ArticlePopularity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Views         uint32                 `protobuf:"varint,1,opt,name=views,proto3" json:"views,omitempty"`         // 浏览次数
	Likes         uint32                 `protobuf:"varint,2,opt,name=likes,proto3" json:"likes,omitempty"`         // 点赞次数
	Comments      uint32                 `protobuf:"varint,3,opt,name=comments,proto3" json:"comments,omitempty"`   // 评论次数
	Shares        uint32                 `protobuf:"varint,4,opt,name=shares,proto3" json:"shares,omitempty"`       // 分享次数
	Favorites     uint32                 `protobuf:"varint,5,opt,name=favorites,proto3" json:"favorites,omitempty"` // 收藏次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArticlePopularity) Reset() {
	*x = ArticlePopularity{}
	mi := &file_article_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArticlePopularity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticlePopularity) ProtoMessage() {}

func (x *ArticlePopularity) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticlePopularity.ProtoReflect.Descriptor instead.
func (*ArticlePopularity) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{34}
}

func (x *ArticlePopularity) GetViews() uint32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *ArticlePopularity) GetLikes() uint32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *ArticlePopularity) GetComments() uint32 {
	if x != nil {
		return x.Comments
	}
	return 0
}

func (x *ArticlePopularity) GetShares() uint32 {
	if x != nil {
		return x.Shares
	}
	return 0
}

func (x *ArticlePopularity) GetFavorites() uint32 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

type GetArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                          // 文章标题
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                      // 文章内容
	Annex         []string               `protobuf:"bytes,4,rep,name=annex,proto3" json:"annex,omitempty"`                          // 附件的URL列表
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`                            // 文章标签
	UserInfo      *UserInfoBase          `protobuf:"bytes,6,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`    // 用户基础信息
	Partition     *Partition             `protobuf:"bytes,7,opt,name=partition,proto3" json:"partition,omitempty"`                  // 文章分区
	CreateAt      string                 `protobuf:"bytes,8,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`    // 创建时间
	UpdateAt      string                 `protobuf:"bytes,9,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`    // 更新时间
	Popularity    *ArticlePopularity     `protobuf:"bytes,10,opt,name=popularity,proto3" json:"popularity,omitempty"`               // 热度信息
	Other         string                 `protobuf:"bytes,11,opt,name=other,proto3" json:"other,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleResponse) Reset() {
	*x = GetArticleResponse{}
	mi := &file_article_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleResponse) ProtoMessage() {}

func (x *GetArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleResponse.ProtoReflect.Descriptor instead.
func (*GetArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{35}
}

func (x *GetArticleResponse) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *GetArticleResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetArticleResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetArticleResponse) GetAnnex() []string {
	if x != nil {
		return x.Annex
	}
	return nil
}

func (x *GetArticleResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetArticleResponse) GetUserInfo() *UserInfoBase {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GetArticleResponse) GetPartition() *Partition {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *GetArticleResponse) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *GetArticleResponse) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *GetArticleResponse) GetPopularity() *ArticlePopularity {
	if x != nil {
		return x.Popularity
	}
	return nil
}

func (x *GetArticleResponse) GetOther() string {
	if x != nil {
		return x.Other
	}
	return ""
}

type RecommendArticlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID（用于个性化推荐）
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                // 推荐文章数量
	PartitionId   string                 `protobuf:"bytes,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	Tags          string                 `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecommendArticlesRequest) Reset() {
	*x = RecommendArticlesRequest{}
	mi := &file_article_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecommendArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendArticlesRequest) ProtoMessage() {}

func (x *RecommendArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendArticlesRequest.ProtoReflect.Descriptor instead.
func (*RecommendArticlesRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{36}
}

func (x *RecommendArticlesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RecommendArticlesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RecommendArticlesRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *RecommendArticlesRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

type RecommendArticlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Articles      []*GetArticleResponse  `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"` // 推荐文章列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecommendArticlesResponse) Reset() {
	*x = RecommendArticlesResponse{}
	mi := &file_article_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecommendArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendArticlesResponse) ProtoMessage() {}

func (x *RecommendArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendArticlesResponse.ProtoReflect.Descriptor instead.
func (*RecommendArticlesResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{37}
}

func (x *RecommendArticlesResponse) GetArticles() []*GetArticleResponse {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *RecommendArticlesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateActionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	ArticleId     string                 `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                            // 操作类型
	Status        bool                   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                       // 操作状态（true表示添加，false表示删除）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateActionRequest) Reset() {
	*x = UpdateActionRequest{}
	mi := &file_article_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActionRequest) ProtoMessage() {}

func (x *UpdateActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActionRequest.ProtoReflect.Descriptor instead.
func (*UpdateActionRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateActionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateActionRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *UpdateActionRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateActionRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateActionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`  // 操作结果信息
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateActionResponse) Reset() {
	*x = UpdateActionResponse{}
	mi := &file_article_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActionResponse) ProtoMessage() {}

func (x *UpdateActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActionResponse.ProtoReflect.Descriptor instead.
func (*UpdateActionResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateActionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateActionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CheckIfUserActionArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	ArticleId     string                 `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckIfUserActionArticleRequest) Reset() {
	*x = CheckIfUserActionArticleRequest{}
	mi := &file_article_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfUserActionArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfUserActionArticleRequest) ProtoMessage() {}

func (x *CheckIfUserActionArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfUserActionArticleRequest.ProtoReflect.Descriptor instead.
func (*CheckIfUserActionArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{40}
}

func (x *CheckIfUserActionArticleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckIfUserActionArticleRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

type CheckIfUserActionArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Like          bool                   `protobuf:"varint,1,opt,name=like,proto3" json:"like,omitempty"`
	View          bool                   `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Favorite      bool                   `protobuf:"varint,4,opt,name=favorite,proto3" json:"favorite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckIfUserActionArticleResponse) Reset() {
	*x = CheckIfUserActionArticleResponse{}
	mi := &file_article_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfUserActionArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfUserActionArticleResponse) ProtoMessage() {}

func (x *CheckIfUserActionArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfUserActionArticleResponse.ProtoReflect.Descriptor instead.
func (*CheckIfUserActionArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{41}
}

func (x *CheckIfUserActionArticleResponse) GetLike() bool {
	if x != nil {
		return x.Like
	}
	return false
}

func (x *CheckIfUserActionArticleResponse) GetView() bool {
	if x != nil {
		return x.View
	}
	return false
}

func (x *CheckIfUserActionArticleResponse) GetFavorite() bool {
	if x != nil {
		return x.Favorite
	}
	return false
}

type GetArticleStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleStatsRequest) Reset() {
	*x = GetArticleStatsRequest{}
	mi := &file_article_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleStatsRequest) ProtoMessage() {}

func (x *GetArticleStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleStatsRequest.ProtoReflect.Descriptor instead.
func (*GetArticleStatsRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{42}
}

func (x *GetArticleStatsRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

type GetArticleStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Views         int32                  `protobuf:"varint,1,opt,name=views,proto3" json:"views,omitempty"`         // 浏览次数
	Likes         int32                  `protobuf:"varint,2,opt,name=likes,proto3" json:"likes,omitempty"`         // 点赞次数
	Favorites     int32                  `protobuf:"varint,3,opt,name=favorites,proto3" json:"favorites,omitempty"` // 收藏次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleStatsResponse) Reset() {
	*x = GetArticleStatsResponse{}
	mi := &file_article_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleStatsResponse) ProtoMessage() {}

func (x *GetArticleStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleStatsResponse.ProtoReflect.Descriptor instead.
func (*GetArticleStatsResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{43}
}

func (x *GetArticleStatsResponse) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *GetArticleStatsResponse) GetLikes() int32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *GetArticleStatsResponse) GetFavorites() int32 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

type ReportArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	ArticleId     string                 `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                        // 举报原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportArticleRequest) Reset() {
	*x = ReportArticleRequest{}
	mi := &file_article_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportArticleRequest) ProtoMessage() {}

func (x *ReportArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportArticleRequest.ProtoReflect.Descriptor instead.
func (*ReportArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{44}
}

func (x *ReportArticleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReportArticleRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *ReportArticleRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ReportArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`  // 操作结果信息
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportArticleResponse) Reset() {
	*x = ReportArticleResponse{}
	mi := &file_article_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportArticleResponse) ProtoMessage() {}

func (x *ReportArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportArticleResponse.ProtoReflect.Descriptor instead.
func (*ReportArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{45}
}

func (x *ReportArticleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReportArticleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ShareArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	ArticleId     string                 `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	Platform      string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`                    // 分享平台（如微信、微博等）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareArticleRequest) Reset() {
	*x = ShareArticleRequest{}
	mi := &file_article_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareArticleRequest) ProtoMessage() {}

func (x *ShareArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareArticleRequest.ProtoReflect.Descriptor instead.
func (*ShareArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{46}
}

func (x *ShareArticleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShareArticleRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *ShareArticleRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type ShareArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`  // 操作结果信息
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareArticleResponse) Reset() {
	*x = ShareArticleResponse{}
	mi := &file_article_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareArticleResponse) ProtoMessage() {}

func (x *ShareArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareArticleResponse.ProtoReflect.Descriptor instead.
func (*ShareArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{47}
}

func (x *ShareArticleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ShareArticleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 搜索请求
type GlobalSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`                        // 搜索关键词
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码，从1开始
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页结果数
	SortBy        string                 `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`        // 排序字段，例如 "relevance", "date" 等
	Filter        string                 `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`                      // 筛选条件
	UserId        string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalSearchRequest) Reset() {
	*x = GlobalSearchRequest{}
	mi := &file_article_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSearchRequest) ProtoMessage() {}

func (x *GlobalSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSearchRequest.ProtoReflect.Descriptor instead.
func (*GlobalSearchRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{48}
}

func (x *GlobalSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GlobalSearchRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GlobalSearchRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GlobalSearchRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *GlobalSearchRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GlobalSearchRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 搜索响应
type GlobalSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Articles      []*ArticleInfo         `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`                        // 文章列表
	UserInfo      []*UserInfoBase        `protobuf:"bytes,2,rep,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`        // 用户列表
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总结果数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalSearchResponse) Reset() {
	*x = GlobalSearchResponse{}
	mi := &file_article_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSearchResponse) ProtoMessage() {}

func (x *GlobalSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSearchResponse.ProtoReflect.Descriptor instead.
func (*GlobalSearchResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{49}
}

func (x *GlobalSearchResponse) GetArticles() []*ArticleInfo {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *GlobalSearchResponse) GetUserInfo() []*UserInfoBase {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GlobalSearchResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetArticlesByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticlesByUserRequest) Reset() {
	*x = GetArticlesByUserRequest{}
	mi := &file_article_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticlesByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticlesByUserRequest) ProtoMessage() {}

func (x *GetArticlesByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticlesByUserRequest.ProtoReflect.Descriptor instead.
func (*GetArticlesByUserRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{50}
}

func (x *GetArticlesByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetArticlesByUserRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *GetArticlesByUserRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetArticlesByUserRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetArticlesByUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleList   []*ArticleInfo         `protobuf:"bytes,1,rep,name=article_list,json=articleList,proto3" json:"article_list,omitempty"` // 搜索结果文章列表
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`   // 总结果数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticlesByUserResponse) Reset() {
	*x = GetArticlesByUserResponse{}
	mi := &file_article_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticlesByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticlesByUserResponse) ProtoMessage() {}

func (x *GetArticlesByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticlesByUserResponse.ProtoReflect.Descriptor instead.
func (*GetArticlesByUserResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{51}
}

func (x *GetArticlesByUserResponse) GetArticleList() []*ArticleInfo {
	if x != nil {
		return x.ArticleList
	}
	return nil
}

func (x *GetArticlesByUserResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ViewHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewHistoryRequest) Reset() {
	*x = ViewHistoryRequest{}
	mi := &file_article_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewHistoryRequest) ProtoMessage() {}

func (x *ViewHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewHistoryRequest.ProtoReflect.Descriptor instead.
func (*ViewHistoryRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{52}
}

func (x *ViewHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ViewHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ViewHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ViewHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleList   []*ArticleInfo         `protobuf:"bytes,1,rep,name=article_list,json=articleList,proto3" json:"article_list,omitempty"` // 搜索结果文章列表
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`   // 总结果数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewHistoryResponse) Reset() {
	*x = ViewHistoryResponse{}
	mi := &file_article_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewHistoryResponse) ProtoMessage() {}

func (x *ViewHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewHistoryResponse.ProtoReflect.Descriptor instead.
func (*ViewHistoryResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{53}
}

func (x *ViewHistoryResponse) GetArticleList() []*ArticleInfo {
	if x != nil {
		return x.ArticleList
	}
	return nil
}

func (x *ViewHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 定义查询待审核文章请求消息
type QueryPendingArticlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditorId     string                 `protobuf:"bytes,3,opt,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码，用于分页
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页的文章数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPendingArticlesRequest) Reset() {
	*x = QueryPendingArticlesRequest{}
	mi := &file_article_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPendingArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPendingArticlesRequest) ProtoMessage() {}

func (x *QueryPendingArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPendingArticlesRequest.ProtoReflect.Descriptor instead.
func (*QueryPendingArticlesRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{54}
}

func (x *QueryPendingArticlesRequest) GetAuditorId() string {
	if x != nil {
		return x.AuditorId
	}
	return ""
}

func (x *QueryPendingArticlesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryPendingArticlesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 定义查询待审核文章响应消息
type QueryPendingArticlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Articles      []*ArticleInfo         `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`                        // 待审核的文章列表
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总待审核文章数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPendingArticlesResponse) Reset() {
	*x = QueryPendingArticlesResponse{}
	mi := &file_article_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPendingArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPendingArticlesResponse) ProtoMessage() {}

func (x *QueryPendingArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPendingArticlesResponse.ProtoReflect.Descriptor instead.
func (*QueryPendingArticlesResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{55}
}

func (x *QueryPendingArticlesResponse) GetArticles() []*ArticleInfo {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *QueryPendingArticlesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 定义审核文章请求消息
type ReviewArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"` // 文章ID
	Approve       bool                   `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`                     // 审核结果，true 表示通过，false 表示未通过
	AuditorId     string                 `protobuf:"bytes,3,opt,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"` // 审核人ID
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`              // 审核描述信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewArticleRequest) Reset() {
	*x = ReviewArticleRequest{}
	mi := &file_article_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewArticleRequest) ProtoMessage() {}

func (x *ReviewArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewArticleRequest.ProtoReflect.Descriptor instead.
func (*ReviewArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{56}
}

func (x *ReviewArticleRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *ReviewArticleRequest) GetApprove() bool {
	if x != nil {
		return x.Approve
	}
	return false
}

func (x *ReviewArticleRequest) GetAuditorId() string {
	if x != nil {
		return x.AuditorId
	}
	return ""
}

func (x *ReviewArticleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 定义审核文章响应消息
type ReviewArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 审核是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 返回信息，成功或失败的描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewArticleResponse) Reset() {
	*x = ReviewArticleResponse{}
	mi := &file_article_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewArticleResponse) ProtoMessage() {}

func (x *ReviewArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewArticleResponse.ProtoReflect.Descriptor instead.
func (*ReviewArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{57}
}

func (x *ReviewArticleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReviewArticleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 定义查询审核通过的文章请求消息
type QueryApprovedArticlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditorId     string                 `protobuf:"bytes,4,opt,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码，用于分页
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页的文章数
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                    // 搜索关键字，可以为空，进行筛选
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryApprovedArticlesRequest) Reset() {
	*x = QueryApprovedArticlesRequest{}
	mi := &file_article_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryApprovedArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryApprovedArticlesRequest) ProtoMessage() {}

func (x *QueryApprovedArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryApprovedArticlesRequest.ProtoReflect.Descriptor instead.
func (*QueryApprovedArticlesRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{58}
}

func (x *QueryApprovedArticlesRequest) GetAuditorId() string {
	if x != nil {
		return x.AuditorId
	}
	return ""
}

func (x *QueryApprovedArticlesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryApprovedArticlesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryApprovedArticlesRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 定义查询审核通过的文章响应消息
type QueryApprovedArticlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Articles      []*ArticleInfo         `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`                        // 审核通过的文章列表
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总审核通过文章数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryApprovedArticlesResponse) Reset() {
	*x = QueryApprovedArticlesResponse{}
	mi := &file_article_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryApprovedArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryApprovedArticlesResponse) ProtoMessage() {}

func (x *QueryApprovedArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryApprovedArticlesResponse.ProtoReflect.Descriptor instead.
func (*QueryApprovedArticlesResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{59}
}

func (x *QueryApprovedArticlesResponse) GetArticles() []*ArticleInfo {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *QueryApprovedArticlesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 定义查询审核未通过的文章请求消息
type QueryRejectedArticlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditorId     string                 `protobuf:"bytes,4,opt,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码，用于分页
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页的文章数
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                    // 搜索关键字，可以为空，进行筛选
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRejectedArticlesRequest) Reset() {
	*x = QueryRejectedArticlesRequest{}
	mi := &file_article_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRejectedArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRejectedArticlesRequest) ProtoMessage() {}

func (x *QueryRejectedArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRejectedArticlesRequest.ProtoReflect.Descriptor instead.
func (*QueryRejectedArticlesRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{60}
}

func (x *QueryRejectedArticlesRequest) GetAuditorId() string {
	if x != nil {
		return x.AuditorId
	}
	return ""
}

func (x *QueryRejectedArticlesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryRejectedArticlesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryRejectedArticlesRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 定义查询审核未通过的文章响应消息
type QueryRejectedArticlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Articles      []*ArticleInfo         `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`                        // 审核未通过的文章列表
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总审核未通过文章数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRejectedArticlesResponse) Reset() {
	*x = QueryRejectedArticlesResponse{}
	mi := &file_article_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRejectedArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRejectedArticlesResponse) ProtoMessage() {}

func (x *QueryRejectedArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRejectedArticlesResponse.ProtoReflect.Descriptor instead.
func (*QueryRejectedArticlesResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{61}
}

func (x *QueryRejectedArticlesResponse) GetArticles() []*ArticleInfo {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *QueryRejectedArticlesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetHotTopicsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHotTopicsRequest) Reset() {
	*x = GetHotTopicsRequest{}
	mi := &file_article_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHotTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotTopicsRequest) ProtoMessage() {}

func (x *GetHotTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotTopicsRequest.ProtoReflect.Descriptor instead.
func (*GetHotTopicsRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{62}
}

func (x *GetHotTopicsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetHotTopicsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHotTopicsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetHotTopicsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []string               `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHotTopicsResponse) Reset() {
	*x = GetHotTopicsResponse{}
	mi := &file_article_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHotTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotTopicsResponse) ProtoMessage() {}

func (x *GetHotTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotTopicsResponse.ProtoReflect.Descriptor instead.
func (*GetHotTopicsResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{63}
}

func (x *GetHotTopicsResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetHotTopicsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 简化文章信息
type ArticleInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                             // 文章ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                       // 标题
	Author        *UserInfoBase          `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`                     // 作者ID
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                   // 简要内容
	CreateAt      string                 `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` // 发布时间戳
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                         // 文章标签
	Annex         []string               `protobuf:"bytes,7,rep,name=annex,proto3" json:"annex,omitempty"`                       // 图片
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArticleInfo) Reset() {
	*x = ArticleInfo{}
	mi := &file_article_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArticleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo) ProtoMessage() {}

func (x *ArticleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{64}
}

func (x *ArticleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArticleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleInfo) GetAuthor() *UserInfoBase {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ArticleInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleInfo) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *ArticleInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ArticleInfo) GetAnnex() []string {
	if x != nil {
		return x.Annex
	}
	return nil
}

var File_article_proto protoreflect.FileDescriptor

const file_article_proto_rawDesc = "" +
	"\n" +
	"\rarticle.proto\x12\aarticle\"\x80\x01\n" +
	"\x15GetCommentListRequest\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"`\n" +
	"\x16GetCommentListResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x120\n" +
	"\bcomments\x18\x02 \x03(\v2\x14.article.CommentInfoR\bcomments\"h\n" +
	"\x16GetReplyCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"Y\n" +
	"\x17GetReplyCommentResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12(\n" +
	"\areplies\x18\x02 \x03(\v2\x0e.article.ReplyR\areplies\"~\n" +
	"\x14CreateCommentRequest\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x14\n" +
	"\x05annex\x18\x04 \x01(\tR\x05annex\"P\n" +
	"\x15CreateCommentResponse\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x9c\x01\n" +
	"\x13ReplyCommentRequest\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x02 \x01(\tR\tcommentId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x14\n" +
	"\x05annex\x18\x05 \x01(\tR\x05annex\"K\n" +
	"\x14ReplyCommentResponse\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xff\x01\n" +
	"\vCommentInfo\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x1d\n" +
	"\n" +
	"article_id\x18\x02 \x01(\tR\tarticleId\x122\n" +
	"\tuser_info\x18\x03 \x01(\v2\x15.article.UserInfoBaseR\buserInfo\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1b\n" +
	"\tcreate_at\x18\x05 \x01(\tR\bcreateAt\x12\x1b\n" +
	"\tleaf_size\x18\x06 \x01(\x05R\bleafSize\x12\x14\n" +
	"\x05likes\x18\a \x01(\x05R\x05likes\x12\x14\n" +
	"\x05annex\x18\b \x03(\tR\x05annex\"d\n" +
	"\x12LikeCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\bR\x06status\"/\n" +
	"\x13LikeCommentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\";\n" +
	"\x1aGetCommentLeafCountRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"3\n" +
	"\x1bGetCommentLeafCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\";\n" +
	"\x1aGetLikeCommentCountRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"3\n" +
	"\x1bGetLikeCommentCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"X\n" +
	"\x1eCheckIfUserLikedCommentRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x02 \x01(\tR\tcommentId\"5\n" +
	"\x1fCheckIfUserLikedCommentResponse\x12\x12\n" +
	"\x04like\x18\x01 \x01(\bR\x04like\"\x93\x02\n" +
	"\x05Reply\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x02 \x01(\tR\tcommentId\x122\n" +
	"\tuser_info\x18\x03 \x01(\v2\x15.article.UserInfoBaseR\buserInfo\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1b\n" +
	"\tcreate_at\x18\x05 \x01(\tR\bcreateAt\x129\n" +
	"\rreply_user_id\x18\x06 \x01(\v2\x15.article.UserInfoBaseR\vreplyUserId\x12\x14\n" +
	"\x05likes\x18\a \x01(\x05R\x05likes\x12\x14\n" +
	"\x05annex\x18\b \x03(\tR\x05annex\"\x97\x02\n" +
	"\x0eUserInfoDetail\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\x12\x16\n" +
	"\x06avatar\x18\x03 \x01(\tR\x06avatar\x12\x16\n" +
	"\x06gender\x18\x04 \x01(\tR\x06gender\x12\x1a\n" +
	"\bbirthday\x18\x05 \x01(\tR\bbirthday\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x1c\n" +
	"\tsignature\x18\a \x01(\tR\tsignature\x12\x1a\n" +
	"\bidentity\x18\b \x03(\tR\bidentity\x12\x16\n" +
	"\x06campus\x18\t \x01(\tR\x06campus\x12\x1e\n" +
	"\n" +
	"background\x18\n" +
	" \x01(\tR\n" +
	"background\"s\n" +
	"\fUserInfoBase\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\x12\x16\n" +
	"\x06avatar\x18\x03 \x01(\tR\x06avatar\x12\x16\n" +
	"\x06gender\x18\x04 \x01(\tR\x06gender\"\xc2\x01\n" +
	"\x14CreateArticleRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x14\n" +
	"\x05annex\x18\x03 \x03(\tR\x05annex\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12!\n" +
	"\fpartition_id\x18\x06 \x01(\tR\vpartitionId\x12\x14\n" +
	"\x05other\x18\a \x01(\tR\x05other\"P\n" +
	"\x15CreateArticleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"article_id\x18\x02 \x01(\tR\tarticleId\"\xbc\x01\n" +
	"\x12EditArticleRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x14\n" +
	"\x05annex\x18\x03 \x03(\tR\x05annex\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"article_id\x18\x06 \x01(\tR\tarticleId\x12\x14\n" +
	"\x05other\x18\a \x01(\tR\x05other\"/\n" +
	"\x13EditArticleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xc5\x01\n" +
	"\x17SaveDraftArticleRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x14\n" +
	"\x05annex\x18\x03 \x03(\tR\x05annex\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12!\n" +
	"\fpartition_id\x18\x06 \x01(\tR\vpartitionId\x12\x14\n" +
	"\x05other\x18\a \x01(\tR\x05other\"O\n" +
	"\x18SaveDraftArticleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\bdraft_id\x18\x02 \x01(\tR\adraftId\"c\n" +
	"\x17GetDraftArticlesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"t\n" +
	"\x18GetDraftArticlesResponse\x127\n" +
	"\farticle_list\x18\x01 \x03(\v2\x14.article.ArticleInfoR\varticleList\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"f\n" +
	"\x14DeleteArticleRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"article_id\x18\x02 \x01(\tR\tarticleId\x12\x16\n" +
	"\x06verify\x18\x03 \x01(\tR\x06verify\"1\n" +
	"\x15DeleteArticleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"/\n" +
	"\x14GetPartitionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"K\n" +
	"\x15GetPartitionsResponse\x122\n" +
	"\n" +
	"partitions\x18\x01 \x03(\v2\x12.article.PartitionR\n" +
	"partitions\"B\n" +
	"\tPartition\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\tR\vpartitionId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"K\n" +
	"\x11GetArticleRequest\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\x91\x01\n" +
	"\x11ArticlePopularity\x12\x14\n" +
	"\x05views\x18\x01 \x01(\rR\x05views\x12\x14\n" +
	"\x05likes\x18\x02 \x01(\rR\x05likes\x12\x1a\n" +
	"\bcomments\x18\x03 \x01(\rR\bcomments\x12\x16\n" +
	"\x06shares\x18\x04 \x01(\rR\x06shares\x12\x1c\n" +
	"\tfavorites\x18\x05 \x01(\rR\tfavorites\"\xff\x02\n" +
	"\x12GetArticleResponse\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x14\n" +
	"\x05annex\x18\x04 \x03(\tR\x05annex\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x122\n" +
	"\tuser_info\x18\x06 \x01(\v2\x15.article.UserInfoBaseR\buserInfo\x120\n" +
	"\tpartition\x18\a \x01(\v2\x12.article.PartitionR\tpartition\x12\x1b\n" +
	"\tcreate_at\x18\b \x01(\tR\bcreateAt\x12\x1b\n" +
	"\tupdate_at\x18\t \x01(\tR\bupdateAt\x12:\n" +
	"\n" +
	"popularity\x18\n" +
	" \x01(\v2\x1a.article.ArticlePopularityR\n" +
	"popularity\x12\x14\n" +
	"\x05other\x18\v \x01(\tR\x05other\"\x80\x01\n" +
	"\x18RecommendArticlesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\tR\vpartitionId\x12\x12\n" +
	"\x04tags\x18\x04 \x01(\tR\x04tags\"j\n" +
	"\x19RecommendArticlesResponse\x127\n" +
	"\barticles\x18\x01 \x03(\v2\x1b.article.GetArticleResponseR\barticles\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"y\n" +
	"\x13UpdateActionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"article_id\x18\x02 \x01(\tR\tarticleId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x04 \x01(\bR\x06status\"J\n" +
	"\x14UpdateActionResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"Y\n" +
	"\x1fCheckIfUserActionArticleRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"article_id\x18\x02 \x01(\tR\tarticleId\"f\n" +
	" CheckIfUserActionArticleResponse\x12\x12\n" +
	"\x04like\x18\x01 \x01(\bR\x04like\x12\x12\n" +
	"\x04view\x18\x02 \x01(\bR\x04view\x12\x1a\n" +
	"\bfavorite\x18\x04 \x01(\bR\bfavorite\"7\n" +
	"\x16GetArticleStatsRequest\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\"c\n" +
	"\x17GetArticleStatsResponse\x12\x14\n" +
	"\x05views\x18\x01 \x01(\x05R\x05views\x12\x14\n" +
	"\x05likes\x18\x02 \x01(\x05R\x05likes\x12\x1c\n" +
	"\tfavorites\x18\x03 \x01(\x05R\tfavorites\"f\n" +
	"\x14ReportArticleRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"article_id\x18\x02 \x01(\tR\tarticleId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"K\n" +
	"\x15ReportArticleResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"i\n" +
	"\x13ShareArticleRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"article_id\x18\x02 \x01(\tR\tarticleId\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\"J\n" +
	"\x14ShareArticleResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"\xa6\x01\n" +
	"\x13GlobalSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x16\n" +
	"\x06filter\x18\x06 \x01(\tR\x06filter\x12\x17\n" +
	"\auser_id\x18\a \x01(\tR\x06userId\"\x9d\x01\n" +
	"\x14GlobalSearchResponse\x120\n" +
	"\barticles\x18\x01 \x03(\v2\x14.article.ArticleInfoR\barticles\x122\n" +
	"\tuser_info\x18\x02 \x03(\v2\x15.article.UserInfoBaseR\buserInfo\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\x81\x01\n" +
	"\x18GetArticlesByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"u\n" +
	"\x19GetArticlesByUserResponse\x127\n" +
	"\farticle_list\x18\x01 \x03(\v2\x14.article.ArticleInfoR\varticleList\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"^\n" +
	"\x12ViewHistoryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"o\n" +
	"\x13ViewHistoryResponse\x127\n" +
	"\farticle_list\x18\x01 \x03(\v2\x14.article.ArticleInfoR\varticleList\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"m\n" +
	"\x1bQueryPendingArticlesRequest\x12\x1d\n" +
	"\n" +
	"auditor_id\x18\x03 \x01(\tR\tauditorId\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\"q\n" +
	"\x1cQueryPendingArticlesResponse\x120\n" +
	"\barticles\x18\x01 \x03(\v2\x14.article.ArticleInfoR\barticles\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x90\x01\n" +
	"\x14ReviewArticleRequest\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\x12\x18\n" +
	"\aapprove\x18\x02 \x01(\bR\aapprove\x12\x1d\n" +
	"\n" +
	"auditor_id\x18\x03 \x01(\tR\tauditorId\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"K\n" +
	"\x15ReviewArticleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x88\x01\n" +
	"\x1cQueryApprovedArticlesRequest\x12\x1d\n" +
	"\n" +
	"auditor_id\x18\x04 \x01(\tR\tauditorId\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x18\n" +
	"\akeyword\x18\x03 \x01(\tR\akeyword\"r\n" +
	"\x1dQueryApprovedArticlesResponse\x120\n" +
	"\barticles\x18\x01 \x03(\v2\x14.article.ArticleInfoR\barticles\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x88\x01\n" +
	"\x1cQueryRejectedArticlesRequest\x12\x1d\n" +
	"\n" +
	"auditor_id\x18\x04 \x01(\tR\tauditorId\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x18\n" +
	"\akeyword\x18\x03 \x01(\tR\akeyword\"r\n" +
	"\x1dQueryRejectedArticlesResponse\x120\n" +
	"\barticles\x18\x01 \x03(\v2\x14.article.ArticleInfoR\barticles\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"_\n" +
	"\x13GetHotTopicsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"K\n" +
	"\x14GetHotTopicsResponse\x12\x12\n" +
	"\x04tags\x18\x01 \x03(\tR\x04tags\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xc3\x01\n" +
	"\vArticleInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12-\n" +
	"\x06author\x18\x03 \x01(\v2\x15.article.UserInfoBaseR\x06author\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1b\n" +
	"\tcreate_at\x18\x05 \x01(\tR\bcreateAt\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x14\n" +
	"\x05annex\x18\a \x03(\tR\x05annex2\x8e\x0e\n" +
	"\aArticle\x12N\n" +
	"\rCreateArticle\x12\x1d.article.CreateArticleRequest\x1a\x1e.article.CreateArticleResponse\x12H\n" +
	"\vEditArticle\x12\x1b.article.EditArticleRequest\x1a\x1c.article.EditArticleResponse\x12W\n" +
	"\x10SaveDraftArticle\x12 .article.SaveDraftArticleRequest\x1a!.article.SaveDraftArticleResponse\x12W\n" +
	"\x10GetDraftArticles\x12 .article.GetDraftArticlesRequest\x1a!.article.GetDraftArticlesResponse\x12N\n" +
	"\rDeleteArticle\x12\x1d.article.DeleteArticleRequest\x1a\x1e.article.DeleteArticleResponse\x12N\n" +
	"\rGetPartitions\x12\x1d.article.GetPartitionsRequest\x1a\x1e.article.GetPartitionsResponse\x12E\n" +
	"\n" +
	"GetArticle\x12\x1a.article.GetArticleRequest\x1a\x1b.article.GetArticleResponse\x12Z\n" +
	"\x11RecommendArticles\x12!.article.RecommendArticlesRequest\x1a\".article.RecommendArticlesResponse\x12K\n" +
	"\fUpdateAction\x12\x1c.article.UpdateActionRequest\x1a\x1d.article.UpdateActionResponse\x12o\n" +
	"\x18CheckIfUserActionArticle\x12(.article.CheckIfUserActionArticleRequest\x1a).article.CheckIfUserActionArticleResponse\x12T\n" +
	"\x0fGetArticleStats\x12\x1f.article.GetArticleStatsRequest\x1a .article.GetArticleStatsResponse\x12N\n" +
	"\rReportArticle\x12\x1d.article.ReportArticleRequest\x1a\x1e.article.ReportArticleResponse\x12K\n" +
	"\fShareArticle\x12\x1c.article.ShareArticleRequest\x1a\x1d.article.ShareArticleResponse\x12K\n" +
	"\fGlobalSearch\x12\x1c.article.GlobalSearchRequest\x1a\x1d.article.GlobalSearchResponse\x12Z\n" +
	"\x11GetArticlesByUser\x12!.article.GetArticlesByUserRequest\x1a\".article.GetArticlesByUserResponse\x12H\n" +
	"\vViewHistory\x12\x1b.article.ViewHistoryRequest\x1a\x1c.article.ViewHistoryResponse\x12c\n" +
	"\x14QueryPendingArticles\x12$.article.QueryPendingArticlesRequest\x1a%.article.QueryPendingArticlesResponse\x12N\n" +
	"\rReviewArticle\x12\x1d.article.ReviewArticleRequest\x1a\x1e.article.ReviewArticleResponse\x12f\n" +
	"\x15QueryApprovedArticles\x12%.article.QueryApprovedArticlesRequest\x1a&.article.QueryApprovedArticlesResponse\x12f\n" +
	"\x15QueryRejectedArticles\x12%.article.QueryRejectedArticlesRequest\x1a&.article.QueryRejectedArticlesResponse\x12K\n" +
	"\fGetHotTopics\x12\x1c.article.GetHotTopicsRequest\x1a\x1d.article.GetHotTopicsResponse2\xcb\x05\n" +
	"\aComment\x12Q\n" +
	"\x0eGetCommentList\x12\x1e.article.GetCommentListRequest\x1a\x1f.article.GetCommentListResponse\x12T\n" +
	"\x0fGetReplyComment\x12\x1f.article.GetReplyCommentRequest\x1a .article.GetReplyCommentResponse\x12N\n" +
	"\rCreateComment\x12\x1d.article.CreateCommentRequest\x1a\x1e.article.CreateCommentResponse\x12K\n" +
	"\fReplyComment\x12\x1c.article.ReplyCommentRequest\x1a\x1d.article.ReplyCommentResponse\x12H\n" +
	"\vLikeComment\x12\x1b.article.LikeCommentRequest\x1a\x1c.article.LikeCommentResponse\x12`\n" +
	"\x13GetCommentLeafCount\x12#.article.GetCommentLeafCountRequest\x1a$.article.GetCommentLeafCountResponse\x12`\n" +
	"\x13GetLikeCommentCount\x12#.article.GetLikeCommentCountRequest\x1a$.article.GetLikeCommentCountResponse\x12l\n" +
	"\x17CheckIfUserLikedComment\x12'.article.CheckIfUserLikedCommentRequest\x1a(.article.CheckIfUserLikedCommentResponseB\vZ\t./articleb\x06proto3"

var (
	file_article_proto_rawDescOnce sync.Once
	file_article_proto_rawDescData []byte
)

func file_article_proto_rawDescGZIP() []byte {
	file_article_proto_rawDescOnce.Do(func() {
		file_article_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_article_proto_rawDesc), len(file_article_proto_rawDesc)))
	})
	return file_article_proto_rawDescData
}

var file_article_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_article_proto_goTypes = []any{
	(*GetCommentListRequest)(nil),            // 0: article.GetCommentListRequest
	(*GetCommentListResponse)(nil),           // 1: article.GetCommentListResponse
	(*GetReplyCommentRequest)(nil),           // 2: article.GetReplyCommentRequest
	(*GetReplyCommentResponse)(nil),          // 3: article.GetReplyCommentResponse
	(*CreateCommentRequest)(nil),             // 4: article.CreateCommentRequest
	(*CreateCommentResponse)(nil),            // 5: article.CreateCommentResponse
	(*ReplyCommentRequest)(nil),              // 6: article.ReplyCommentRequest
	(*ReplyCommentResponse)(nil),             // 7: article.ReplyCommentResponse
	(*CommentInfo)(nil),                      // 8: article.CommentInfo
	(*LikeCommentRequest)(nil),               // 9: article.LikeCommentRequest
	(*LikeCommentResponse)(nil),              // 10: article.LikeCommentResponse
	(*GetCommentLeafCountRequest)(nil),       // 11: article.GetCommentLeafCountRequest
	(*GetCommentLeafCountResponse)(nil),      // 12: article.GetCommentLeafCountResponse
	(*GetLikeCommentCountRequest)(nil),       // 13: article.GetLikeCommentCountRequest
	(*GetLikeCommentCountResponse)(nil),      // 14: article.GetLikeCommentCountResponse
	(*CheckIfUserLikedCommentRequest)(nil),   // 15: article.CheckIfUserLikedCommentRequest
	(*CheckIfUserLikedCommentResponse)(nil),  // 16: article.CheckIfUserLikedCommentResponse
	(*Reply)(nil),                            // 17: article.Reply
	(*UserInfoDetail)(nil),                   // 18: article.UserInfoDetail
	(*UserInfoBase)(nil),                     // 19: article.UserInfoBase
	(*CreateArticleRequest)(nil),             // 20: article.CreateArticleRequest
	(*CreateArticleResponse)(nil),            // 21: article.CreateArticleResponse
	(*EditArticleRequest)(nil),               // 22: article.EditArticleRequest
	(*EditArticleResponse)(nil),              // 23: article.EditArticleResponse
	(*SaveDraftArticleRequest)(nil),          // 24: article.SaveDraftArticleRequest
	(*SaveDraftArticleResponse)(nil),         // 25: article.SaveDraftArticleResponse
	(*GetDraftArticlesRequest)(nil),          // 26: article.GetDraftArticlesRequest
	(*GetDraftArticlesResponse)(nil),         // 27: article.GetDraftArticlesResponse
	(*DeleteArticleRequest)(nil),             // 28: article.DeleteArticleRequest
	(*DeleteArticleResponse)(nil),            // 29: article.DeleteArticleResponse
	(*GetPartitionsRequest)(nil),             // 30: article.GetPartitionsRequest
	(*GetPartitionsResponse)(nil),            // 31: article.GetPartitionsResponse
	(*Partition)(nil),                        // 32: article.Partition
	(*GetArticleRequest)(nil),                // 33: article.GetArticleRequest
	(*ArticlePopularity)(nil),                // 34: article.ArticlePopularity
	(*GetArticleResponse)(nil),               // 35: article.GetArticleResponse
	(*RecommendArticlesRequest)(nil),         // 36: article.RecommendArticlesRequest
	(*RecommendArticlesResponse)(nil),        // 37: article.RecommendArticlesResponse
	(*UpdateActionRequest)(nil),              // 38: article.UpdateActionRequest
	(*UpdateActionResponse)(nil),             // 39: article.UpdateActionResponse
	(*CheckIfUserActionArticleRequest)(nil),  // 40: article.CheckIfUserActionArticleRequest
	(*CheckIfUserActionArticleResponse)(nil), // 41: article.CheckIfUserActionArticleResponse
	(*GetArticleStatsRequest)(nil),           // 42: article.GetArticleStatsRequest
	(*GetArticleStatsResponse)(nil),          // 43: article.GetArticleStatsResponse
	(*ReportArticleRequest)(nil),             // 44: article.ReportArticleRequest
	(*ReportArticleResponse)(nil),            // 45: article.ReportArticleResponse
	(*ShareArticleRequest)(nil),              // 46: article.ShareArticleRequest
	(*ShareArticleResponse)(nil),             // 47: article.ShareArticleResponse
	(*GlobalSearchRequest)(nil),              // 48: article.GlobalSearchRequest
	(*GlobalSearchResponse)(nil),             // 49: article.GlobalSearchResponse
	(*GetArticlesByUserRequest)(nil),         // 50: article.GetArticlesByUserRequest
	(*GetArticlesByUserResponse)(nil),        // 51: article.GetArticlesByUserResponse
	(*ViewHistoryRequest)(nil),               // 52: article.ViewHistoryRequest
	(*ViewHistoryResponse)(nil),              // 53: article.ViewHistoryResponse
	(*QueryPendingArticlesRequest)(nil),      // 54: article.QueryPendingArticlesRequest
	(*QueryPendingArticlesResponse)(nil),     // 55: article.QueryPendingArticlesResponse
	(*ReviewArticleRequest)(nil),             // 56: article.ReviewArticleRequest
	(*ReviewArticleResponse)(nil),            // 57: article.ReviewArticleResponse
	(*QueryApprovedArticlesRequest)(nil),     // 58: article.QueryApprovedArticlesRequest
	(*QueryApprovedArticlesResponse)(nil),    // 59: article.QueryApprovedArticlesResponse
	(*QueryRejectedArticlesRequest)(nil),     // 60: article.QueryRejectedArticlesRequest
	(*QueryRejectedArticlesResponse)(nil),    // 61: article.QueryRejectedArticlesResponse
	(*GetHotTopicsRequest)(nil),              // 62: article.GetHotTopicsRequest
	(*GetHotTopicsResponse)(nil),             // 63: article.GetHotTopicsResponse
	(*ArticleInfo)(nil),                      // 64: article.ArticleInfo
}
var file_article_proto_depIdxs = []int32{
	8,  // 0: article.GetCommentListResponse.comments:type_name -> article.CommentInfo
	17, // 1: article.GetReplyCommentResponse.replies:type_name -> article.Reply
	19, // 2: article.CommentInfo.user_info:type_name -> article.UserInfoBase
	19, // 3: article.Reply.user_info:type_name -> article.UserInfoBase
	19, // 4: article.Reply.reply_user_id:type_name -> article.UserInfoBase
	64, // 5: article.GetDraftArticlesResponse.article_list:type_name -> article.ArticleInfo
	32, // 6: article.GetPartitionsResponse.partitions:type_name -> article.Partition
	19, // 7: article.GetArticleResponse.user_info:type_name -> article.UserInfoBase
	32, // 8: article.GetArticleResponse.partition:type_name -> article.Partition
	34, // 9: article.GetArticleResponse.popularity:type_name -> article.ArticlePopularity
	35, // 10: article.RecommendArticlesResponse.articles:type_name -> article.GetArticleResponse
	64, // 11: article.GlobalSearchResponse.articles:type_name -> article.ArticleInfo
	19, // 12: article.GlobalSearchResponse.user_info:type_name -> article.UserInfoBase
	64, // 13: article.GetArticlesByUserResponse.article_list:type_name -> article.ArticleInfo
	64, // 14: article.ViewHistoryResponse.article_list:type_name -> article.ArticleInfo
	64, // 15: article.QueryPendingArticlesResponse.articles:type_name -> article.ArticleInfo
	64, // 16: article.QueryApprovedArticlesResponse.articles:type_name -> article.ArticleInfo
	64, // 17: article.QueryRejectedArticlesResponse.articles:type_name -> article.ArticleInfo
	19, // 18: article.ArticleInfo.author:type_name -> article.UserInfoBase
	20, // 19: article.Article.CreateArticle:input_type -> article.CreateArticleRequest
	22, // 20: article.Article.EditArticle:input_type -> article.EditArticleRequest
	24, // 21: article.Article.SaveDraftArticle:input_type -> article.SaveDraftArticleRequest
	26, // 22: article.Article.GetDraftArticles:input_type -> article.GetDraftArticlesRequest
	28, // 23: article.Article.DeleteArticle:input_type -> article.DeleteArticleRequest
	30, // 24: article.Article.GetPartitions:input_type -> article.GetPartitionsRequest
	33, // 25: article.Article.GetArticle:input_type -> article.GetArticleRequest
	36, // 26: article.Article.RecommendArticles:input_type -> article.RecommendArticlesRequest
	38, // 27: article.Article.UpdateAction:input_type -> article.UpdateActionRequest
	40, // 28: article.Article.CheckIfUserActionArticle:input_type -> article.CheckIfUserActionArticleRequest
	42, // 29: article.Article.GetArticleStats:input_type -> article.GetArticleStatsRequest
	44, // 30: article.Article.ReportArticle:input_type -> article.ReportArticleRequest
	46, // 31: article.Article.ShareArticle:input_type -> article.ShareArticleRequest
	48, // 32: article.Article.GlobalSearch:input_type -> article.GlobalSearchRequest
	50, // 33: article.Article.GetArticlesByUser:input_type -> article.GetArticlesByUserRequest
	52, // 34: article.Article.ViewHistory:input_type -> article.ViewHistoryRequest
	54, // 35: article.Article.QueryPendingArticles:input_type -> article.QueryPendingArticlesRequest
	56, // 36: article.Article.ReviewArticle:input_type -> article.ReviewArticleRequest
	58, // 37: article.Article.QueryApprovedArticles:input_type -> article.QueryApprovedArticlesRequest
	60, // 38: article.Article.QueryRejectedArticles:input_type -> article.QueryRejectedArticlesRequest
	62, // 39: article.Article.GetHotTopics:input_type -> article.GetHotTopicsRequest
	0,  // 40: article.Comment.GetCommentList:input_type -> article.GetCommentListRequest
	2,  // 41: article.Comment.GetReplyComment:input_type -> article.GetReplyCommentRequest
	4,  // 42: article.Comment.CreateComment:input_type -> article.CreateCommentRequest
	6,  // 43: article.Comment.ReplyComment:input_type -> article.ReplyCommentRequest
	9,  // 44: article.Comment.LikeComment:input_type -> article.LikeCommentRequest
	11, // 45: article.Comment.GetCommentLeafCount:input_type -> article.GetCommentLeafCountRequest
	13, // 46: article.Comment.GetLikeCommentCount:input_type -> article.GetLikeCommentCountRequest
	15, // 47: article.Comment.CheckIfUserLikedComment:input_type -> article.CheckIfUserLikedCommentRequest
	21, // 48: article.Article.CreateArticle:output_type -> article.CreateArticleResponse
	23, // 49: article.Article.EditArticle:output_type -> article.EditArticleResponse
	25, // 50: article.Article.SaveDraftArticle:output_type -> article.SaveDraftArticleResponse
	27, // 51: article.Article.GetDraftArticles:output_type -> article.GetDraftArticlesResponse
	29, // 52: article.Article.DeleteArticle:output_type -> article.DeleteArticleResponse
	31, // 53: article.Article.GetPartitions:output_type -> article.GetPartitionsResponse
	35, // 54: article.Article.GetArticle:output_type -> article.GetArticleResponse
	37, // 55: article.Article.RecommendArticles:output_type -> article.RecommendArticlesResponse
	39, // 56: article.Article.UpdateAction:output_type -> article.UpdateActionResponse
	41, // 57: article.Article.CheckIfUserActionArticle:output_type -> article.CheckIfUserActionArticleResponse
	43, // 58: article.Article.GetArticleStats:output_type -> article.GetArticleStatsResponse
	45, // 59: article.Article.ReportArticle:output_type -> article.ReportArticleResponse
	47, // 60: article.Article.ShareArticle:output_type -> article.ShareArticleResponse
	49, // 61: article.Article.GlobalSearch:output_type -> article.GlobalSearchResponse
	51, // 62: article.Article.GetArticlesByUser:output_type -> article.GetArticlesByUserResponse
	53, // 63: article.Article.ViewHistory:output_type -> article.ViewHistoryResponse
	55, // 64: article.Article.QueryPendingArticles:output_type -> article.QueryPendingArticlesResponse
	57, // 65: article.Article.ReviewArticle:output_type -> article.ReviewArticleResponse
	59, // 66: article.Article.QueryApprovedArticles:output_type -> article.QueryApprovedArticlesResponse
	61, // 67: article.Article.QueryRejectedArticles:output_type -> article.QueryRejectedArticlesResponse
	63, // 68: article.Article.GetHotTopics:output_type -> article.GetHotTopicsResponse
	1,  // 69: article.Comment.GetCommentList:output_type -> article.GetCommentListResponse
	3,  // 70: article.Comment.GetReplyComment:output_type -> article.GetReplyCommentResponse
	5,  // 71: article.Comment.CreateComment:output_type -> article.CreateCommentResponse
	7,  // 72: article.Comment.ReplyComment:output_type -> article.ReplyCommentResponse
	10, // 73: article.Comment.LikeComment:output_type -> article.LikeCommentResponse
	12, // 74: article.Comment.GetCommentLeafCount:output_type -> article.GetCommentLeafCountResponse
	14, // 75: article.Comment.GetLikeCommentCount:output_type -> article.GetLikeCommentCountResponse
	16, // 76: article.Comment.CheckIfUserLikedComment:output_type -> article.CheckIfUserLikedCommentResponse
	48, // [48:77] is the sub-list for method output_type
	19, // [19:48] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_article_proto_init() }
func file_article_proto_init() {
	if File_article_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_article_proto_rawDesc), len(file_article_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_article_proto_goTypes,
		DependencyIndexes: file_article_proto_depIdxs,
		MessageInfos:      file_article_proto_msgTypes,
	}.Build()
	File_article_proto = out.File
	file_article_proto_goTypes = nil
	file_article_proto_depIdxs = nil
}
