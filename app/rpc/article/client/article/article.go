// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: article.proto

package article

import (
	"context"

	"github.com/krace-tx/emo_trash/app/rpc/article/article"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ArticleInfo                      = article.ArticleInfo
	ArticlePopularity                = article.ArticlePopularity
	CheckIfUserActionArticleRequest  = article.CheckIfUserActionArticleRequest
	CheckIfUserActionArticleResponse = article.CheckIfUserActionArticleResponse
	CheckIfUserLikedCommentRequest   = article.CheckIfUserLikedCommentRequest
	CheckIfUserLikedCommentResponse  = article.CheckIfUserLikedCommentResponse
	CommentInfo                      = article.CommentInfo
	CreateArticleRequest             = article.CreateArticleRequest
	CreateArticleResponse            = article.CreateArticleResponse
	CreateCommentRequest             = article.CreateCommentRequest
	CreateCommentResponse            = article.CreateCommentResponse
	DeleteArticleRequest             = article.DeleteArticleRequest
	DeleteArticleResponse            = article.DeleteArticleResponse
	EditArticleRequest               = article.EditArticleRequest
	EditArticleResponse              = article.EditArticleResponse
	GetArticleRequest                = article.GetArticleRequest
	GetArticleResponse               = article.GetArticleResponse
	GetArticleStatsRequest           = article.GetArticleStatsRequest
	GetArticleStatsResponse          = article.GetArticleStatsResponse
	GetArticlesByUserRequest         = article.GetArticlesByUserRequest
	GetArticlesByUserResponse        = article.GetArticlesByUserResponse
	GetCommentLeafCountRequest       = article.GetCommentLeafCountRequest
	GetCommentLeafCountResponse      = article.GetCommentLeafCountResponse
	GetCommentListRequest            = article.GetCommentListRequest
	GetCommentListResponse           = article.GetCommentListResponse
	GetDraftArticlesRequest          = article.GetDraftArticlesRequest
	GetDraftArticlesResponse         = article.GetDraftArticlesResponse
	GetHotTopicsRequest              = article.GetHotTopicsRequest
	GetHotTopicsResponse             = article.GetHotTopicsResponse
	GetLikeCommentCountRequest       = article.GetLikeCommentCountRequest
	GetLikeCommentCountResponse      = article.GetLikeCommentCountResponse
	GetPartitionsRequest             = article.GetPartitionsRequest
	GetPartitionsResponse            = article.GetPartitionsResponse
	GetReplyCommentRequest           = article.GetReplyCommentRequest
	GetReplyCommentResponse          = article.GetReplyCommentResponse
	GlobalSearchRequest              = article.GlobalSearchRequest
	GlobalSearchResponse             = article.GlobalSearchResponse
	LikeCommentRequest               = article.LikeCommentRequest
	LikeCommentResponse              = article.LikeCommentResponse
	Partition                        = article.Partition
	QueryApprovedArticlesRequest     = article.QueryApprovedArticlesRequest
	QueryApprovedArticlesResponse    = article.QueryApprovedArticlesResponse
	QueryPendingArticlesRequest      = article.QueryPendingArticlesRequest
	QueryPendingArticlesResponse     = article.QueryPendingArticlesResponse
	QueryRejectedArticlesRequest     = article.QueryRejectedArticlesRequest
	QueryRejectedArticlesResponse    = article.QueryRejectedArticlesResponse
	RecommendArticlesRequest         = article.RecommendArticlesRequest
	RecommendArticlesResponse        = article.RecommendArticlesResponse
	Reply                            = article.Reply
	ReplyCommentRequest              = article.ReplyCommentRequest
	ReplyCommentResponse             = article.ReplyCommentResponse
	ReportArticleRequest             = article.ReportArticleRequest
	ReportArticleResponse            = article.ReportArticleResponse
	ReviewArticleRequest             = article.ReviewArticleRequest
	ReviewArticleResponse            = article.ReviewArticleResponse
	SaveDraftArticleRequest          = article.SaveDraftArticleRequest
	SaveDraftArticleResponse         = article.SaveDraftArticleResponse
	ShareArticleRequest              = article.ShareArticleRequest
	ShareArticleResponse             = article.ShareArticleResponse
	UpdateActionRequest              = article.UpdateActionRequest
	UpdateActionResponse             = article.UpdateActionResponse
	UserInfoBase                     = article.UserInfoBase
	UserInfoDetail                   = article.UserInfoDetail
	ViewHistoryRequest               = article.ViewHistoryRequest
	ViewHistoryResponse              = article.ViewHistoryResponse

	Article interface {
		// 发布文章信息
		CreateArticle(ctx context.Context, in *CreateArticleRequest, opts ...grpc.CallOption) (*CreateArticleResponse, error)
		// 编辑文章信息
		EditArticle(ctx context.Context, in *EditArticleRequest, opts ...grpc.CallOption) (*EditArticleResponse, error)
		// 保存草稿
		SaveDraftArticle(ctx context.Context, in *SaveDraftArticleRequest, opts ...grpc.CallOption) (*SaveDraftArticleResponse, error)
		// 查询草稿列表
		GetDraftArticles(ctx context.Context, in *GetDraftArticlesRequest, opts ...grpc.CallOption) (*GetDraftArticlesResponse, error)
		// 删除文章信息
		DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*DeleteArticleResponse, error)
		// 查询分区
		GetPartitions(ctx context.Context, in *GetPartitionsRequest, opts ...grpc.CallOption) (*GetPartitionsResponse, error)
		// 查询文章
		GetArticle(ctx context.Context, in *GetArticleRequest, opts ...grpc.CallOption) (*GetArticleResponse, error)
		// 推荐文章列表
		RecommendArticles(ctx context.Context, in *RecommendArticlesRequest, opts ...grpc.CallOption) (*RecommendArticlesResponse, error)
		// 更新活动状态
		UpdateAction(ctx context.Context, in *UpdateActionRequest, opts ...grpc.CallOption) (*UpdateActionResponse, error)
		// 查询用户是否对文章进行点赞
		CheckIfUserActionArticle(ctx context.Context, in *CheckIfUserActionArticleRequest, opts ...grpc.CallOption) (*CheckIfUserActionArticleResponse, error)
		// 获取文章统计信息
		GetArticleStats(ctx context.Context, in *GetArticleStatsRequest, opts ...grpc.CallOption) (*GetArticleStatsResponse, error)
		// 举报文章
		ReportArticle(ctx context.Context, in *ReportArticleRequest, opts ...grpc.CallOption) (*ReportArticleResponse, error)
		// 分享文章
		ShareArticle(ctx context.Context, in *ShareArticleRequest, opts ...grpc.CallOption) (*ShareArticleResponse, error)
		// 全局搜索接口
		GlobalSearch(ctx context.Context, in *GlobalSearchRequest, opts ...grpc.CallOption) (*GlobalSearchResponse, error)
		// 查看用户发布的文章列表
		GetArticlesByUser(ctx context.Context, in *GetArticlesByUserRequest, opts ...grpc.CallOption) (*GetArticlesByUserResponse, error)
		// 查询历史记录
		ViewHistory(ctx context.Context, in *ViewHistoryRequest, opts ...grpc.CallOption) (*ViewHistoryResponse, error)
		// 查询待审核的文章列表
		QueryPendingArticles(ctx context.Context, in *QueryPendingArticlesRequest, opts ...grpc.CallOption) (*QueryPendingArticlesResponse, error)
		// 审核文章（通过/未通过）
		ReviewArticle(ctx context.Context, in *ReviewArticleRequest, opts ...grpc.CallOption) (*ReviewArticleResponse, error)
		// 查询审核通过的文章列表
		QueryApprovedArticles(ctx context.Context, in *QueryApprovedArticlesRequest, opts ...grpc.CallOption) (*QueryApprovedArticlesResponse, error)
		// 查询审核未通过的文章列表
		QueryRejectedArticles(ctx context.Context, in *QueryRejectedArticlesRequest, opts ...grpc.CallOption) (*QueryRejectedArticlesResponse, error)
		// 获取热门帖子
		GetHotTopics(ctx context.Context, in *GetHotTopicsRequest, opts ...grpc.CallOption) (*GetHotTopicsResponse, error)
	}

	defaultArticle struct {
		cli zrpc.Client
	}
)

func NewArticle(cli zrpc.Client) Article {
	return &defaultArticle{
		cli: cli,
	}
}

// 发布文章信息
func (m *defaultArticle) CreateArticle(ctx context.Context, in *CreateArticleRequest, opts ...grpc.CallOption) (*CreateArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.CreateArticle(ctx, in, opts...)
}

// 编辑文章信息
func (m *defaultArticle) EditArticle(ctx context.Context, in *EditArticleRequest, opts ...grpc.CallOption) (*EditArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.EditArticle(ctx, in, opts...)
}

// 保存草稿
func (m *defaultArticle) SaveDraftArticle(ctx context.Context, in *SaveDraftArticleRequest, opts ...grpc.CallOption) (*SaveDraftArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.SaveDraftArticle(ctx, in, opts...)
}

// 查询草稿列表
func (m *defaultArticle) GetDraftArticles(ctx context.Context, in *GetDraftArticlesRequest, opts ...grpc.CallOption) (*GetDraftArticlesResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.GetDraftArticles(ctx, in, opts...)
}

// 删除文章信息
func (m *defaultArticle) DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*DeleteArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.DeleteArticle(ctx, in, opts...)
}

// 查询分区
func (m *defaultArticle) GetPartitions(ctx context.Context, in *GetPartitionsRequest, opts ...grpc.CallOption) (*GetPartitionsResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.GetPartitions(ctx, in, opts...)
}

// 查询文章
func (m *defaultArticle) GetArticle(ctx context.Context, in *GetArticleRequest, opts ...grpc.CallOption) (*GetArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.GetArticle(ctx, in, opts...)
}

// 推荐文章列表
func (m *defaultArticle) RecommendArticles(ctx context.Context, in *RecommendArticlesRequest, opts ...grpc.CallOption) (*RecommendArticlesResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.RecommendArticles(ctx, in, opts...)
}

// 更新活动状态
func (m *defaultArticle) UpdateAction(ctx context.Context, in *UpdateActionRequest, opts ...grpc.CallOption) (*UpdateActionResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.UpdateAction(ctx, in, opts...)
}

// 查询用户是否对文章进行点赞
func (m *defaultArticle) CheckIfUserActionArticle(ctx context.Context, in *CheckIfUserActionArticleRequest, opts ...grpc.CallOption) (*CheckIfUserActionArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.CheckIfUserActionArticle(ctx, in, opts...)
}

// 获取文章统计信息
func (m *defaultArticle) GetArticleStats(ctx context.Context, in *GetArticleStatsRequest, opts ...grpc.CallOption) (*GetArticleStatsResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.GetArticleStats(ctx, in, opts...)
}

// 举报文章
func (m *defaultArticle) ReportArticle(ctx context.Context, in *ReportArticleRequest, opts ...grpc.CallOption) (*ReportArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.ReportArticle(ctx, in, opts...)
}

// 分享文章
func (m *defaultArticle) ShareArticle(ctx context.Context, in *ShareArticleRequest, opts ...grpc.CallOption) (*ShareArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.ShareArticle(ctx, in, opts...)
}

// 全局搜索接口
func (m *defaultArticle) GlobalSearch(ctx context.Context, in *GlobalSearchRequest, opts ...grpc.CallOption) (*GlobalSearchResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.GlobalSearch(ctx, in, opts...)
}

// 查看用户发布的文章列表
func (m *defaultArticle) GetArticlesByUser(ctx context.Context, in *GetArticlesByUserRequest, opts ...grpc.CallOption) (*GetArticlesByUserResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.GetArticlesByUser(ctx, in, opts...)
}

// 查询历史记录
func (m *defaultArticle) ViewHistory(ctx context.Context, in *ViewHistoryRequest, opts ...grpc.CallOption) (*ViewHistoryResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.ViewHistory(ctx, in, opts...)
}

// 查询待审核的文章列表
func (m *defaultArticle) QueryPendingArticles(ctx context.Context, in *QueryPendingArticlesRequest, opts ...grpc.CallOption) (*QueryPendingArticlesResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.QueryPendingArticles(ctx, in, opts...)
}

// 审核文章（通过/未通过）
func (m *defaultArticle) ReviewArticle(ctx context.Context, in *ReviewArticleRequest, opts ...grpc.CallOption) (*ReviewArticleResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.ReviewArticle(ctx, in, opts...)
}

// 查询审核通过的文章列表
func (m *defaultArticle) QueryApprovedArticles(ctx context.Context, in *QueryApprovedArticlesRequest, opts ...grpc.CallOption) (*QueryApprovedArticlesResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.QueryApprovedArticles(ctx, in, opts...)
}

// 查询审核未通过的文章列表
func (m *defaultArticle) QueryRejectedArticles(ctx context.Context, in *QueryRejectedArticlesRequest, opts ...grpc.CallOption) (*QueryRejectedArticlesResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.QueryRejectedArticles(ctx, in, opts...)
}

// 获取热门帖子
func (m *defaultArticle) GetHotTopics(ctx context.Context, in *GetHotTopicsRequest, opts ...grpc.CallOption) (*GetHotTopicsResponse, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.GetHotTopics(ctx, in, opts...)
}
