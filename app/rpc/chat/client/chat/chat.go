// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: chat.proto

package chat

import (
	"context"

	"github.com/krace-tx/emo_trash/app/rpc/chat/chat"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AIChatRequest              = chat.AIChatRequest
	AIChatResponse             = chat.AIChatResponse
	GetChatHistoryRequest      = chat.GetChatHistoryRequest
	GetChatHistoryResponse     = chat.GetChatHistoryResponse
	GetChatWindowRequest       = chat.GetChatWindowRequest
	GetChatWindowResponse      = chat.GetChatWindowResponse
	Message                    = chat.Message
	ReceiveMessageRequest      = chat.ReceiveMessageRequest
	ReceiveMessageResponse     = chat.ReceiveMessageResponse
	SendMessage                = chat.SendMessage
	SendMessageRequest         = chat.SendMessageRequest
	SendMessageResponse        = chat.SendMessageResponse
	SentimentResult            = chat.SentimentResult
	UpdateOnlineStatusRequest  = chat.UpdateOnlineStatusRequest
	UpdateOnlineStatusResponse = chat.UpdateOnlineStatusResponse
	UserInfoBase               = chat.UserInfoBase

	Chat interface {
		// 发送消息
		SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*SendMessageResponse, error)
		// 接收消息
		ReceiveMessage(ctx context.Context, in *ReceiveMessageRequest, opts ...grpc.CallOption) (*ReceiveMessageResponse, error)
		// 查询聊天记录
		GetChatHistory(ctx context.Context, in *GetChatHistoryRequest, opts ...grpc.CallOption) (*GetChatHistoryResponse, error)
		// 更新在线状态
		UpdateOnlineStatus(ctx context.Context, in *UpdateOnlineStatusRequest, opts ...grpc.CallOption) (*UpdateOnlineStatusResponse, error)
		// 查询指定对话窗口的聊天记录
		GetChatWindow(ctx context.Context, in *GetChatWindowRequest, opts ...grpc.CallOption) (*GetChatWindowResponse, error)
		// AI 聊天接口（新增）
		AIChat(ctx context.Context, in *AIChatRequest, opts ...grpc.CallOption) (*AIChatResponse, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

// 发送消息
func (m *defaultChat) SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*SendMessageResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.SendMessage(ctx, in, opts...)
}

// 接收消息
func (m *defaultChat) ReceiveMessage(ctx context.Context, in *ReceiveMessageRequest, opts ...grpc.CallOption) (*ReceiveMessageResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.ReceiveMessage(ctx, in, opts...)
}

// 查询聊天记录
func (m *defaultChat) GetChatHistory(ctx context.Context, in *GetChatHistoryRequest, opts ...grpc.CallOption) (*GetChatHistoryResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.GetChatHistory(ctx, in, opts...)
}

// 更新在线状态
func (m *defaultChat) UpdateOnlineStatus(ctx context.Context, in *UpdateOnlineStatusRequest, opts ...grpc.CallOption) (*UpdateOnlineStatusResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.UpdateOnlineStatus(ctx, in, opts...)
}

// 查询指定对话窗口的聊天记录
func (m *defaultChat) GetChatWindow(ctx context.Context, in *GetChatWindowRequest, opts ...grpc.CallOption) (*GetChatWindowResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.GetChatWindow(ctx, in, opts...)
}

// AI 聊天接口（新增）
func (m *defaultChat) AIChat(ctx context.Context, in *AIChatRequest, opts ...grpc.CallOption) (*AIChatResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.AIChat(ctx, in, opts...)
}
