// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: chat.proto

package server

import (
	"context"

	"github.com/krace-tx/emo_trash/app/rpc/chat/chat"
	"github.com/krace-tx/emo_trash/app/rpc/chat/internal/logic/chat"
	"github.com/krace-tx/emo_trash/app/rpc/chat/internal/svc"
)

type ChatServer struct {
	svcCtx *svc.ServiceContext
	chat.UnimplementedChatServer
}

func NewChatServer(svcCtx *svc.ServiceContext) *ChatServer {
	return &ChatServer{
		svcCtx: svcCtx,
	}
}

// 发送消息
func (s *ChatServer) SendMessage(ctx context.Context, in *chat.SendMessageRequest) (*chat.SendMessageResponse, error) {
	l := chatlogic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

// 接收消息
func (s *ChatServer) ReceiveMessage(ctx context.Context, in *chat.ReceiveMessageRequest) (*chat.ReceiveMessageResponse, error) {
	l := chatlogic.NewReceiveMessageLogic(ctx, s.svcCtx)
	return l.ReceiveMessage(in)
}

// 查询聊天记录
func (s *ChatServer) GetChatHistory(ctx context.Context, in *chat.GetChatHistoryRequest) (*chat.GetChatHistoryResponse, error) {
	l := chatlogic.NewGetChatHistoryLogic(ctx, s.svcCtx)
	return l.GetChatHistory(in)
}

// 更新在线状态
func (s *ChatServer) UpdateOnlineStatus(ctx context.Context, in *chat.UpdateOnlineStatusRequest) (*chat.UpdateOnlineStatusResponse, error) {
	l := chatlogic.NewUpdateOnlineStatusLogic(ctx, s.svcCtx)
	return l.UpdateOnlineStatus(in)
}

// 查询指定对话窗口的聊天记录
func (s *ChatServer) GetChatWindow(ctx context.Context, in *chat.GetChatWindowRequest) (*chat.GetChatWindowResponse, error) {
	l := chatlogic.NewGetChatWindowLogic(ctx, s.svcCtx)
	return l.GetChatWindow(in)
}
