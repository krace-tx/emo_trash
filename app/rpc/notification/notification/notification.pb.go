// goctl rpc protoc notification.proto --go_out=. --go-grpc_out=. --zrpc_out=.  -m

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: notification.proto

package notification

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取通知列表
type GetNotificationListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`        // 用户ID
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页通知数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationListRequest) Reset() {
	*x = GetNotificationListRequest{}
	mi := &file_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationListRequest) ProtoMessage() {}

func (x *GetNotificationListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationListRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationListRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{0}
}

func (x *GetNotificationListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetNotificationListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNotificationListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetNotificationListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notify              `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`              // 通知列表
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总通知数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationListResponse) Reset() {
	*x = GetNotificationListResponse{}
	mi := &file_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationListResponse) ProtoMessage() {}

func (x *GetNotificationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationListResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationListResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{1}
}

func (x *GetNotificationListResponse) GetNotifications() []*Notify {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetNotificationListResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 标记单个通知为已读
type MarkNotificationAsReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                         // 用户ID
	NotificationId string                 `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"` // 通知ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkNotificationAsReadRequest) Reset() {
	*x = MarkNotificationAsReadRequest{}
	mi := &file_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationAsReadRequest) ProtoMessage() {}

func (x *MarkNotificationAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkNotificationAsReadRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{2}
}

func (x *MarkNotificationAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarkNotificationAsReadRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type MarkNotificationAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkNotificationAsReadResponse) Reset() {
	*x = MarkNotificationAsReadResponse{}
	mi := &file_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationAsReadResponse) ProtoMessage() {}

func (x *MarkNotificationAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkNotificationAsReadResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{3}
}

func (x *MarkNotificationAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 标记所有通知为已读
type MarkAllNotificationsAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllNotificationsAsReadRequest) Reset() {
	*x = MarkAllNotificationsAsReadRequest{}
	mi := &file_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllNotificationsAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllNotificationsAsReadRequest) ProtoMessage() {}

func (x *MarkAllNotificationsAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllNotificationsAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAllNotificationsAsReadRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{4}
}

func (x *MarkAllNotificationsAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MarkAllNotificationsAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllNotificationsAsReadResponse) Reset() {
	*x = MarkAllNotificationsAsReadResponse{}
	mi := &file_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllNotificationsAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllNotificationsAsReadResponse) ProtoMessage() {}

func (x *MarkAllNotificationsAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllNotificationsAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAllNotificationsAsReadResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{5}
}

func (x *MarkAllNotificationsAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 删除单个通知
type DeleteNotificationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                         // 用户ID
	NotificationId string                 `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"` // 通知ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type DeleteNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationResponse) Reset() {
	*x = DeleteNotificationResponse{}
	mi := &file_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationResponse) ProtoMessage() {}

func (x *DeleteNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 删除所有通知
type DeleteAllNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllNotificationsRequest) Reset() {
	*x = DeleteAllNotificationsRequest{}
	mi := &file_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllNotificationsRequest) ProtoMessage() {}

func (x *DeleteAllNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllNotificationsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAllNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAllNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteAllNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllNotificationsResponse) Reset() {
	*x = DeleteAllNotificationsResponse{}
	mi := &file_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllNotificationsResponse) ProtoMessage() {}

func (x *DeleteAllNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllNotificationsResponse.ProtoReflect.Descriptor instead.
func (*DeleteAllNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteAllNotificationsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 推送通知
type PushNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notify        *Notify                `protobuf:"bytes,1,opt,name=notify,proto3" json:"notify,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushNotificationRequest) Reset() {
	*x = PushNotificationRequest{}
	mi := &file_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNotificationRequest) ProtoMessage() {}

func (x *PushNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNotificationRequest.ProtoReflect.Descriptor instead.
func (*PushNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{10}
}

func (x *PushNotificationRequest) GetNotify() *Notify {
	if x != nil {
		return x.Notify
	}
	return nil
}

type PushNotificationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                    // 操作是否成功
	NotificationId string                 `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"` // 推送的通知ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PushNotificationResponse) Reset() {
	*x = PushNotificationResponse{}
	mi := &file_notification_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNotificationResponse) ProtoMessage() {}

func (x *PushNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNotificationResponse.ProtoReflect.Descriptor instead.
func (*PushNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{11}
}

func (x *PushNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PushNotificationResponse) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

// 获取未读通知数量
type GetUnreadNotificationCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadNotificationCountRequest) Reset() {
	*x = GetUnreadNotificationCountRequest{}
	mi := &file_notification_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadNotificationCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadNotificationCountRequest) ProtoMessage() {}

func (x *GetUnreadNotificationCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadNotificationCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadNotificationCountRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{12}
}

func (x *GetUnreadNotificationCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUnreadNotificationCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnreadCount   int32                  `protobuf:"varint,1,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"` // 未读通知数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadNotificationCountResponse) Reset() {
	*x = GetUnreadNotificationCountResponse{}
	mi := &file_notification_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadNotificationCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadNotificationCountResponse) ProtoMessage() {}

func (x *GetUnreadNotificationCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadNotificationCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadNotificationCountResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{13}
}

func (x *GetUnreadNotificationCountResponse) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// 通知定义
type Notify struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 通知ID
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                         // 通知内容
	IsRead        bool                   `protobuf:"varint,4,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`            // 是否已读
	CreateAt      string                 `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`       // 时间戳
	SenderId      string                 `protobuf:"bytes,6,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`       // 发送者ID
	ReceiverId    string                 `protobuf:"bytes,7,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"` // 接收者ID
	ExtraData     string                 `protobuf:"bytes,8,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`    // 额外数据（JSON 格式字符串，用于扩展）
	Type          string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`                               // 通知类型（如系统消息、用户消息、动态消息）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notify) Reset() {
	*x = Notify{}
	mi := &file_notification_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notify) ProtoMessage() {}

func (x *Notify) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notify.ProtoReflect.Descriptor instead.
func (*Notify) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{14}
}

func (x *Notify) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notify) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Notify) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Notify) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *Notify) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Notify) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *Notify) GetExtraData() string {
	if x != nil {
		return x.ExtraData
	}
	return ""
}

func (x *Notify) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_notification_proto protoreflect.FileDescriptor

const file_notification_proto_rawDesc = "" +
	"\n" +
	"\x12notification.proto\x12\fnotification\"f\n" +
	"\x1aGetNotificationListRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"z\n" +
	"\x1bGetNotificationListResponse\x12:\n" +
	"\rnotifications\x18\x01 \x03(\v2\x14.notification.NotifyR\rnotifications\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"a\n" +
	"\x1dMarkNotificationAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fnotification_id\x18\x02 \x01(\tR\x0enotificationId\":\n" +
	"\x1eMarkNotificationAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"<\n" +
	"!MarkAllNotificationsAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\">\n" +
	"\"MarkAllNotificationsAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"]\n" +
	"\x19DeleteNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fnotification_id\x18\x02 \x01(\tR\x0enotificationId\"6\n" +
	"\x1aDeleteNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"8\n" +
	"\x1dDeleteAllNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\":\n" +
	"\x1eDeleteAllNotificationsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"G\n" +
	"\x17PushNotificationRequest\x12,\n" +
	"\x06notify\x18\x01 \x01(\v2\x14.notification.NotifyR\x06notify\"]\n" +
	"\x18PushNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12'\n" +
	"\x0fnotification_id\x18\x02 \x01(\tR\x0enotificationId\"<\n" +
	"!GetUnreadNotificationCountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"G\n" +
	"\"GetUnreadNotificationCountResponse\x12!\n" +
	"\funread_count\x18\x01 \x01(\x05R\vunreadCount\"\xd9\x01\n" +
	"\x06Notify\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x17\n" +
	"\ais_read\x18\x04 \x01(\bR\x06isRead\x12\x1b\n" +
	"\tcreate_at\x18\x05 \x01(\tR\bcreateAt\x12\x1b\n" +
	"\tsender_id\x18\x06 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vreceiver_id\x18\a \x01(\tR\n" +
	"receiverId\x12\x1d\n" +
	"\n" +
	"extra_data\x18\b \x01(\tR\textraData\x12\x12\n" +
	"\x04type\x18\t \x01(\tR\x04type2\xb2\x06\n" +
	"\fNotification\x12j\n" +
	"\x13GetNotificationList\x12(.notification.GetNotificationListRequest\x1a).notification.GetNotificationListResponse\x12s\n" +
	"\x16MarkNotificationAsRead\x12+.notification.MarkNotificationAsReadRequest\x1a,.notification.MarkNotificationAsReadResponse\x12\x7f\n" +
	"\x1aMarkAllNotificationsAsRead\x12/.notification.MarkAllNotificationsAsReadRequest\x1a0.notification.MarkAllNotificationsAsReadResponse\x12g\n" +
	"\x12DeleteNotification\x12'.notification.DeleteNotificationRequest\x1a(.notification.DeleteNotificationResponse\x12s\n" +
	"\x16DeleteAllNotifications\x12+.notification.DeleteAllNotificationsRequest\x1a,.notification.DeleteAllNotificationsResponse\x12a\n" +
	"\x10PushNotification\x12%.notification.PushNotificationRequest\x1a&.notification.PushNotificationResponse\x12\x7f\n" +
	"\x1aGetUnreadNotificationCount\x12/.notification.GetUnreadNotificationCountRequest\x1a0.notification.GetUnreadNotificationCountResponseB\x10Z\x0e./notificationb\x06proto3"

var (
	file_notification_proto_rawDescOnce sync.Once
	file_notification_proto_rawDescData []byte
)

func file_notification_proto_rawDescGZIP() []byte {
	file_notification_proto_rawDescOnce.Do(func() {
		file_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notification_proto_rawDesc), len(file_notification_proto_rawDesc)))
	})
	return file_notification_proto_rawDescData
}

var file_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_notification_proto_goTypes = []any{
	(*GetNotificationListRequest)(nil),         // 0: notification.GetNotificationListRequest
	(*GetNotificationListResponse)(nil),        // 1: notification.GetNotificationListResponse
	(*MarkNotificationAsReadRequest)(nil),      // 2: notification.MarkNotificationAsReadRequest
	(*MarkNotificationAsReadResponse)(nil),     // 3: notification.MarkNotificationAsReadResponse
	(*MarkAllNotificationsAsReadRequest)(nil),  // 4: notification.MarkAllNotificationsAsReadRequest
	(*MarkAllNotificationsAsReadResponse)(nil), // 5: notification.MarkAllNotificationsAsReadResponse
	(*DeleteNotificationRequest)(nil),          // 6: notification.DeleteNotificationRequest
	(*DeleteNotificationResponse)(nil),         // 7: notification.DeleteNotificationResponse
	(*DeleteAllNotificationsRequest)(nil),      // 8: notification.DeleteAllNotificationsRequest
	(*DeleteAllNotificationsResponse)(nil),     // 9: notification.DeleteAllNotificationsResponse
	(*PushNotificationRequest)(nil),            // 10: notification.PushNotificationRequest
	(*PushNotificationResponse)(nil),           // 11: notification.PushNotificationResponse
	(*GetUnreadNotificationCountRequest)(nil),  // 12: notification.GetUnreadNotificationCountRequest
	(*GetUnreadNotificationCountResponse)(nil), // 13: notification.GetUnreadNotificationCountResponse
	(*Notify)(nil), // 14: notification.Notify
}
var file_notification_proto_depIdxs = []int32{
	14, // 0: notification.GetNotificationListResponse.notifications:type_name -> notification.Notify
	14, // 1: notification.PushNotificationRequest.notify:type_name -> notification.Notify
	0,  // 2: notification.Notification.GetNotificationList:input_type -> notification.GetNotificationListRequest
	2,  // 3: notification.Notification.MarkNotificationAsRead:input_type -> notification.MarkNotificationAsReadRequest
	4,  // 4: notification.Notification.MarkAllNotificationsAsRead:input_type -> notification.MarkAllNotificationsAsReadRequest
	6,  // 5: notification.Notification.DeleteNotification:input_type -> notification.DeleteNotificationRequest
	8,  // 6: notification.Notification.DeleteAllNotifications:input_type -> notification.DeleteAllNotificationsRequest
	10, // 7: notification.Notification.PushNotification:input_type -> notification.PushNotificationRequest
	12, // 8: notification.Notification.GetUnreadNotificationCount:input_type -> notification.GetUnreadNotificationCountRequest
	1,  // 9: notification.Notification.GetNotificationList:output_type -> notification.GetNotificationListResponse
	3,  // 10: notification.Notification.MarkNotificationAsRead:output_type -> notification.MarkNotificationAsReadResponse
	5,  // 11: notification.Notification.MarkAllNotificationsAsRead:output_type -> notification.MarkAllNotificationsAsReadResponse
	7,  // 12: notification.Notification.DeleteNotification:output_type -> notification.DeleteNotificationResponse
	9,  // 13: notification.Notification.DeleteAllNotifications:output_type -> notification.DeleteAllNotificationsResponse
	11, // 14: notification.Notification.PushNotification:output_type -> notification.PushNotificationResponse
	13, // 15: notification.Notification.GetUnreadNotificationCount:output_type -> notification.GetUnreadNotificationCountResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_notification_proto_init() }
func file_notification_proto_init() {
	if File_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notification_proto_rawDesc), len(file_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_proto_goTypes,
		DependencyIndexes: file_notification_proto_depIdxs,
		MessageInfos:      file_notification_proto_msgTypes,
	}.Build()
	File_notification_proto = out.File
	file_notification_proto_goTypes = nil
	file_notification_proto_depIdxs = nil
}
